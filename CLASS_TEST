{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/san88806/NUMPY-PRACTISE/blob/main/CLASS_TEST\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "09f7b924",
      "metadata": {
        "id": "09f7b924"
      },
      "outputs": [],
      "source": [
        "# importing the requried librabies\n",
        "import numpy as np \n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "%matplotlib inline"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "012c5600",
      "metadata": {
        "scrolled": true,
        "id": "012c5600",
        "outputId": "7fcddf31-4ac9-4683-edd2-d936d48cbd8f"
      },
      "outputs": [
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "C:\\Users\\Sangeeta\\AppData\\Local\\Temp\\ipykernel_5984\\254289674.py:1: DtypeWarning: Columns (1) have mixed types. Specify dtype option on import or set low_memory=False.\n",
            "  train_df=pd.read_csv(r\"C:\\Users\\Sangeeta\\Downloads\\train_df.csv\")\n"
          ]
        },
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Id</th>\n",
              "      <th>County</th>\n",
              "      <th>Province_State</th>\n",
              "      <th>Country_Region</th>\n",
              "      <th>Population</th>\n",
              "      <th>Weight</th>\n",
              "      <th>Date</th>\n",
              "      <th>Target</th>\n",
              "      <th>TargetValue</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>27657145</td>\n",
              "      <td>0.058359</td>\n",
              "      <td>23-01-2020</td>\n",
              "      <td>ConfirmedCases</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>27657145</td>\n",
              "      <td>0.583587</td>\n",
              "      <td>23-01-2020</td>\n",
              "      <td>Fatalities</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>27657145</td>\n",
              "      <td>0.058359</td>\n",
              "      <td>24-01-2020</td>\n",
              "      <td>ConfirmedCases</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>27657145</td>\n",
              "      <td>0.583587</td>\n",
              "      <td>24-01-2020</td>\n",
              "      <td>Fatalities</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>27657145</td>\n",
              "      <td>0.058359</td>\n",
              "      <td>25-01-2020</td>\n",
              "      <td>ConfirmedCases</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>969635</th>\n",
              "      <td>969636</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Zimbabwe</td>\n",
              "      <td>14240168</td>\n",
              "      <td>0.607106</td>\n",
              "      <td>08-06-2020</td>\n",
              "      <td>Fatalities</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>969636</th>\n",
              "      <td>969637</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Zimbabwe</td>\n",
              "      <td>14240168</td>\n",
              "      <td>0.060711</td>\n",
              "      <td>09-06-2020</td>\n",
              "      <td>ConfirmedCases</td>\n",
              "      <td>27</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>969637</th>\n",
              "      <td>969638</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Zimbabwe</td>\n",
              "      <td>14240168</td>\n",
              "      <td>0.607106</td>\n",
              "      <td>09-06-2020</td>\n",
              "      <td>Fatalities</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>969638</th>\n",
              "      <td>969639</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Zimbabwe</td>\n",
              "      <td>14240168</td>\n",
              "      <td>0.060711</td>\n",
              "      <td>10-06-2020</td>\n",
              "      <td>ConfirmedCases</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>969639</th>\n",
              "      <td>969640</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Zimbabwe</td>\n",
              "      <td>14240168</td>\n",
              "      <td>0.607106</td>\n",
              "      <td>10-06-2020</td>\n",
              "      <td>Fatalities</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>969640 rows Ã— 9 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "            Id County Province_State Country_Region  Population    Weight  \\\n",
              "0            1    NaN            NaN    Afghanistan    27657145  0.058359   \n",
              "1            2    NaN            NaN    Afghanistan    27657145  0.583587   \n",
              "2            3    NaN            NaN    Afghanistan    27657145  0.058359   \n",
              "3            4    NaN            NaN    Afghanistan    27657145  0.583587   \n",
              "4            5    NaN            NaN    Afghanistan    27657145  0.058359   \n",
              "...        ...    ...            ...            ...         ...       ...   \n",
              "969635  969636    NaN            NaN       Zimbabwe    14240168  0.607106   \n",
              "969636  969637    NaN            NaN       Zimbabwe    14240168  0.060711   \n",
              "969637  969638    NaN            NaN       Zimbabwe    14240168  0.607106   \n",
              "969638  969639    NaN            NaN       Zimbabwe    14240168  0.060711   \n",
              "969639  969640    NaN            NaN       Zimbabwe    14240168  0.607106   \n",
              "\n",
              "              Date          Target  TargetValue  \n",
              "0       23-01-2020  ConfirmedCases            0  \n",
              "1       23-01-2020      Fatalities            0  \n",
              "2       24-01-2020  ConfirmedCases            0  \n",
              "3       24-01-2020      Fatalities            0  \n",
              "4       25-01-2020  ConfirmedCases            0  \n",
              "...            ...             ...          ...  \n",
              "969635  08-06-2020      Fatalities            0  \n",
              "969636  09-06-2020  ConfirmedCases           27  \n",
              "969637  09-06-2020      Fatalities            0  \n",
              "969638  10-06-2020  ConfirmedCases            6  \n",
              "969639  10-06-2020      Fatalities            0  \n",
              "\n",
              "[969640 rows x 9 columns]"
            ]
          },
          "execution_count": 9,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "train_df=pd.read_csv(r\"C:\\Users\\Sangeeta\\Downloads\\train_df.csv\")\n",
        "test_df=pd.read_csv(r\"C:\\Users\\Sangeeta\\Downloads\\test_df.csv\")\n",
        "train_df"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "be9dfd67",
      "metadata": {
        "scrolled": false,
        "id": "be9dfd67",
        "outputId": "b52037ce-493a-474f-f8e7-f16f9643de10"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Id</th>\n",
              "      <th>County</th>\n",
              "      <th>Province_State</th>\n",
              "      <th>Country_Region</th>\n",
              "      <th>Population</th>\n",
              "      <th>Weight</th>\n",
              "      <th>Date</th>\n",
              "      <th>Target</th>\n",
              "      <th>TargetValue</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>27657145</td>\n",
              "      <td>0.058359</td>\n",
              "      <td>23-01-2020</td>\n",
              "      <td>ConfirmedCases</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>27657145</td>\n",
              "      <td>0.583587</td>\n",
              "      <td>23-01-2020</td>\n",
              "      <td>Fatalities</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>27657145</td>\n",
              "      <td>0.058359</td>\n",
              "      <td>24-01-2020</td>\n",
              "      <td>ConfirmedCases</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>27657145</td>\n",
              "      <td>0.583587</td>\n",
              "      <td>24-01-2020</td>\n",
              "      <td>Fatalities</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>27657145</td>\n",
              "      <td>0.058359</td>\n",
              "      <td>25-01-2020</td>\n",
              "      <td>ConfirmedCases</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>27657145</td>\n",
              "      <td>0.583587</td>\n",
              "      <td>25-01-2020</td>\n",
              "      <td>Fatalities</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>27657145</td>\n",
              "      <td>0.058359</td>\n",
              "      <td>26-01-2020</td>\n",
              "      <td>ConfirmedCases</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>27657145</td>\n",
              "      <td>0.583587</td>\n",
              "      <td>26-01-2020</td>\n",
              "      <td>Fatalities</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>27657145</td>\n",
              "      <td>0.058359</td>\n",
              "      <td>27-01-2020</td>\n",
              "      <td>ConfirmedCases</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>10</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>27657145</td>\n",
              "      <td>0.583587</td>\n",
              "      <td>27-01-2020</td>\n",
              "      <td>Fatalities</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   Id County Province_State Country_Region  Population    Weight        Date  \\\n",
              "0   1    NaN            NaN    Afghanistan    27657145  0.058359  23-01-2020   \n",
              "1   2    NaN            NaN    Afghanistan    27657145  0.583587  23-01-2020   \n",
              "2   3    NaN            NaN    Afghanistan    27657145  0.058359  24-01-2020   \n",
              "3   4    NaN            NaN    Afghanistan    27657145  0.583587  24-01-2020   \n",
              "4   5    NaN            NaN    Afghanistan    27657145  0.058359  25-01-2020   \n",
              "5   6    NaN            NaN    Afghanistan    27657145  0.583587  25-01-2020   \n",
              "6   7    NaN            NaN    Afghanistan    27657145  0.058359  26-01-2020   \n",
              "7   8    NaN            NaN    Afghanistan    27657145  0.583587  26-01-2020   \n",
              "8   9    NaN            NaN    Afghanistan    27657145  0.058359  27-01-2020   \n",
              "9  10    NaN            NaN    Afghanistan    27657145  0.583587  27-01-2020   \n",
              "\n",
              "           Target  TargetValue  \n",
              "0  ConfirmedCases            0  \n",
              "1      Fatalities            0  \n",
              "2  ConfirmedCases            0  \n",
              "3      Fatalities            0  \n",
              "4  ConfirmedCases            0  \n",
              "5      Fatalities            0  \n",
              "6  ConfirmedCases            0  \n",
              "7      Fatalities            0  \n",
              "8  ConfirmedCases            0  \n",
              "9      Fatalities            0  "
            ]
          },
          "execution_count": 10,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "train_df.head(10)\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "104b0d3a",
      "metadata": {
        "id": "104b0d3a",
        "outputId": "0451f494-c82b-462a-a7b5-39d98b2385ed"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ForecastId</th>\n",
              "      <th>County</th>\n",
              "      <th>Province_State</th>\n",
              "      <th>Country_Region</th>\n",
              "      <th>Population</th>\n",
              "      <th>Weight</th>\n",
              "      <th>Date</th>\n",
              "      <th>Target</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>27657145</td>\n",
              "      <td>0.058359</td>\n",
              "      <td>27-04-2020</td>\n",
              "      <td>ConfirmedCases</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>27657145</td>\n",
              "      <td>0.583587</td>\n",
              "      <td>27-04-2020</td>\n",
              "      <td>Fatalities</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>27657145</td>\n",
              "      <td>0.058359</td>\n",
              "      <td>28-04-2020</td>\n",
              "      <td>ConfirmedCases</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>27657145</td>\n",
              "      <td>0.583587</td>\n",
              "      <td>28-04-2020</td>\n",
              "      <td>Fatalities</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>27657145</td>\n",
              "      <td>0.058359</td>\n",
              "      <td>29-04-2020</td>\n",
              "      <td>ConfirmedCases</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>27657145</td>\n",
              "      <td>0.583587</td>\n",
              "      <td>29-04-2020</td>\n",
              "      <td>Fatalities</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>27657145</td>\n",
              "      <td>0.058359</td>\n",
              "      <td>30-04-2020</td>\n",
              "      <td>ConfirmedCases</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>27657145</td>\n",
              "      <td>0.583587</td>\n",
              "      <td>30-04-2020</td>\n",
              "      <td>Fatalities</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>27657145</td>\n",
              "      <td>0.058359</td>\n",
              "      <td>01-05-2020</td>\n",
              "      <td>ConfirmedCases</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>10</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>27657145</td>\n",
              "      <td>0.583587</td>\n",
              "      <td>01-05-2020</td>\n",
              "      <td>Fatalities</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   ForecastId County Province_State Country_Region  Population    Weight  \\\n",
              "0           1    NaN            NaN    Afghanistan    27657145  0.058359   \n",
              "1           2    NaN            NaN    Afghanistan    27657145  0.583587   \n",
              "2           3    NaN            NaN    Afghanistan    27657145  0.058359   \n",
              "3           4    NaN            NaN    Afghanistan    27657145  0.583587   \n",
              "4           5    NaN            NaN    Afghanistan    27657145  0.058359   \n",
              "5           6    NaN            NaN    Afghanistan    27657145  0.583587   \n",
              "6           7    NaN            NaN    Afghanistan    27657145  0.058359   \n",
              "7           8    NaN            NaN    Afghanistan    27657145  0.583587   \n",
              "8           9    NaN            NaN    Afghanistan    27657145  0.058359   \n",
              "9          10    NaN            NaN    Afghanistan    27657145  0.583587   \n",
              "\n",
              "         Date          Target  \n",
              "0  27-04-2020  ConfirmedCases  \n",
              "1  27-04-2020      Fatalities  \n",
              "2  28-04-2020  ConfirmedCases  \n",
              "3  28-04-2020      Fatalities  \n",
              "4  29-04-2020  ConfirmedCases  \n",
              "5  29-04-2020      Fatalities  \n",
              "6  30-04-2020  ConfirmedCases  \n",
              "7  30-04-2020      Fatalities  \n",
              "8  01-05-2020  ConfirmedCases  \n",
              "9  01-05-2020      Fatalities  "
            ]
          },
          "execution_count": 11,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "test_df.head(10)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "f12606c3",
      "metadata": {
        "id": "f12606c3",
        "outputId": "56b0fdaf-f564-4ff9-999c-de0caca96eef"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 969640 entries, 0 to 969639\n",
            "Data columns (total 9 columns):\n",
            " #   Column          Non-Null Count   Dtype  \n",
            "---  ------          --------------   -----  \n",
            " 0   Id              969640 non-null  int64  \n",
            " 1   County          880040 non-null  object \n",
            " 2   Province_State  917280 non-null  object \n",
            " 3   Country_Region  969640 non-null  object \n",
            " 4   Population      969640 non-null  int64  \n",
            " 5   Weight          969640 non-null  float64\n",
            " 6   Date            969640 non-null  object \n",
            " 7   Target          969640 non-null  object \n",
            " 8   TargetValue     969640 non-null  int64  \n",
            "dtypes: float64(1), int64(3), object(5)\n",
            "memory usage: 66.6+ MB\n"
          ]
        }
      ],
      "source": [
        "# to get the summary of the dataframe\n",
        "train_df.info()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "817030ba",
      "metadata": {
        "id": "817030ba",
        "outputId": "bbaec131-f835-486a-ec16-e97a00d43f48"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 311670 entries, 0 to 311669\n",
            "Data columns (total 8 columns):\n",
            " #   Column          Non-Null Count   Dtype  \n",
            "---  ------          --------------   -----  \n",
            " 0   ForecastId      311670 non-null  int64  \n",
            " 1   County          282870 non-null  object \n",
            " 2   Province_State  294840 non-null  object \n",
            " 3   Country_Region  311670 non-null  object \n",
            " 4   Population      311670 non-null  int64  \n",
            " 5   Weight          311670 non-null  float64\n",
            " 6   Date            311670 non-null  object \n",
            " 7   Target          311670 non-null  object \n",
            "dtypes: float64(1), int64(2), object(5)\n",
            "memory usage: 19.0+ MB\n"
          ]
        }
      ],
      "source": [
        "test_df.info()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "204965a9",
      "metadata": {
        "scrolled": true,
        "id": "204965a9",
        "outputId": "f98ccffb-a70f-4fef-ae15-126a59d069e8"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "UniqueForecastId's count:311670\n",
            "[     1      2      3 ... 311668 311669 311670]\n",
            "\n",
            "UniqueCounty's count:1840\n",
            "[nan 'Autauga' 'Baldwin' ... 'Uinta' 'Washakie' 'Weston']\n",
            "\n",
            "UniqueProvince_State's count:133\n",
            "[nan 'Australian Capital Territory' 'New South Wales' 'Northern Territory'\n",
            " 'Queensland' 'South Australia' 'Tasmania' 'Victoria' 'Western Australia'\n",
            " 'Alberta' 'British Columbia' 'Manitoba' 'New Brunswick'\n",
            " 'Newfoundland and Labrador' 'Northwest Territories' 'Nova Scotia'\n",
            " 'Ontario' 'Prince Edward Island' 'Quebec' 'Saskatchewan' 'Yukon' 'Anhui'\n",
            " 'Beijing' 'Chongqing' 'Fujian' 'Gansu' 'Guangdong' 'Guangxi' 'Guizhou'\n",
            " 'Hainan' 'Hebei' 'Heilongjiang' 'Henan' 'Hong Kong' 'Hubei' 'Hunan'\n",
            " 'Inner Mongolia' 'Jiangsu' 'Jiangxi' 'Jilin' 'Liaoning' 'Macau' 'Ningxia'\n",
            " 'Qinghai' 'Shaanxi' 'Shandong' 'Shanghai' 'Shanxi' 'Sichuan' 'Tianjin'\n",
            " 'Tibet' 'Xinjiang' 'Yunnan' 'Zhejiang' 'Faroe Islands' 'Greenland'\n",
            " 'French Guiana' 'French Polynesia' 'Guadeloupe' 'Martinique' 'Mayotte'\n",
            " 'New Caledonia' 'Reunion' 'Saint Barthelemy' 'Saint Pierre and Miquelon'\n",
            " 'St Martin' 'Aruba' 'Bonaire, Sint Eustatius and Saba' 'Curacao'\n",
            " 'Sint Maarten' 'Alabama' 'Alaska' 'Arizona' 'Arkansas' 'California'\n",
            " 'Colorado' 'Connecticut' 'Delaware' 'District of Columbia' 'Florida'\n",
            " 'Georgia' 'Guam' 'Hawaii' 'Idaho' 'Illinois' 'Indiana' 'Iowa' 'Kansas'\n",
            " 'Kentucky' 'Louisiana' 'Maine' 'Maryland' 'Massachusetts' 'Michigan'\n",
            " 'Minnesota' 'Mississippi' 'Missouri' 'Montana' 'Nebraska' 'Nevada'\n",
            " 'New Hampshire' 'New Jersey' 'New Mexico' 'New York' 'North Carolina'\n",
            " 'North Dakota' 'Ohio' 'Oklahoma' 'Oregon' 'Pennsylvania' 'Puerto Rico'\n",
            " 'Rhode Island' 'South Carolina' 'South Dakota' 'Tennessee' 'Texas' 'Utah'\n",
            " 'Vermont' 'Virgin Islands' 'Virginia' 'Washington' 'West Virginia'\n",
            " 'Wisconsin' 'Wyoming' 'Anguilla' 'Bermuda' 'British Virgin Islands'\n",
            " 'Cayman Islands' 'Channel Islands' 'Falkland Islands (Malvinas)'\n",
            " 'Gibraltar' 'Isle of Man' 'Montserrat' 'Turks and Caicos Islands']\n",
            "\n",
            "UniqueCountry_Region's count:187\n",
            "['Afghanistan' 'Albania' 'Algeria' 'Andorra' 'Angola'\n",
            " 'Antigua and Barbuda' 'Argentina' 'Armenia' 'Australia' 'Austria'\n",
            " 'Azerbaijan' 'Bahamas' 'Bahrain' 'Bangladesh' 'Barbados' 'Belarus'\n",
            " 'Belgium' 'Belize' 'Benin' 'Bhutan' 'Bolivia' 'Bosnia and Herzegovina'\n",
            " 'Botswana' 'Brazil' 'Brunei' 'Bulgaria' 'Burkina Faso' 'Burma' 'Burundi'\n",
            " 'Cabo Verde' 'Cambodia' 'Cameroon' 'Canada' 'Central African Republic'\n",
            " 'Chad' 'Chile' 'China' 'Colombia' 'Comoros' 'Congo (Brazzaville)'\n",
            " 'Congo (Kinshasa)' 'Costa Rica' \"Cote d'Ivoire\" 'Croatia' 'Cuba' 'Cyprus'\n",
            " 'Czechia' 'Denmark' 'Diamond Princess' 'Djibouti' 'Dominica'\n",
            " 'Dominican Republic' 'Ecuador' 'Egypt' 'El Salvador' 'Equatorial Guinea'\n",
            " 'Eritrea' 'Estonia' 'Eswatini' 'Ethiopia' 'Fiji' 'Finland' 'France'\n",
            " 'Gabon' 'Gambia' 'Georgia' 'Germany' 'Ghana' 'Greece' 'Grenada'\n",
            " 'Guatemala' 'Guinea' 'Guinea-Bissau' 'Guyana' 'Haiti' 'Holy See'\n",
            " 'Honduras' 'Hungary' 'Iceland' 'India' 'Indonesia' 'Iran' 'Iraq'\n",
            " 'Ireland' 'Israel' 'Italy' 'Jamaica' 'Japan' 'Jordan' 'Kazakhstan'\n",
            " 'Kenya' 'Korea, South' 'Kosovo' 'Kuwait' 'Kyrgyzstan' 'Laos' 'Latvia'\n",
            " 'Lebanon' 'Liberia' 'Libya' 'Liechtenstein' 'Lithuania' 'Luxembourg'\n",
            " 'MS Zaandam' 'Madagascar' 'Malawi' 'Malaysia' 'Maldives' 'Mali' 'Malta'\n",
            " 'Mauritania' 'Mauritius' 'Mexico' 'Moldova' 'Monaco' 'Mongolia'\n",
            " 'Montenegro' 'Morocco' 'Mozambique' 'Namibia' 'Nepal' 'Netherlands'\n",
            " 'New Zealand' 'Nicaragua' 'Niger' 'Nigeria' 'North Macedonia' 'Norway'\n",
            " 'Oman' 'Pakistan' 'Panama' 'Papua New Guinea' 'Paraguay' 'Peru'\n",
            " 'Philippines' 'Poland' 'Portugal' 'Qatar' 'Romania' 'Russia' 'Rwanda'\n",
            " 'Saint Kitts and Nevis' 'Saint Lucia' 'Saint Vincent and the Grenadines'\n",
            " 'San Marino' 'Sao Tome and Principe' 'Saudi Arabia' 'Senegal' 'Serbia'\n",
            " 'Seychelles' 'Sierra Leone' 'Singapore' 'Slovakia' 'Slovenia' 'Somalia'\n",
            " 'South Africa' 'South Sudan' 'Spain' 'Sri Lanka' 'Sudan' 'Suriname'\n",
            " 'Sweden' 'Switzerland' 'Syria' 'Taiwan*' 'Tajikistan' 'Tanzania'\n",
            " 'Thailand' 'Timor-Leste' 'Togo' 'Trinidad and Tobago' 'Tunisia' 'Turkey'\n",
            " 'US' 'Uganda' 'Ukraine' 'United Arab Emirates' 'United Kingdom' 'Uruguay'\n",
            " 'Uzbekistan' 'Venezuela' 'Vietnam' 'West Bank and Gaza' 'Western Sahara'\n",
            " 'Yemen' 'Zambia' 'Zimbabwe']\n",
            "\n",
            "UniquePopulation's count:3408\n",
            "[27657145  2886026 40400000 ... 28500000 15933883 14240168]\n",
            "\n",
            "UniqueWeight's count:6816\n",
            "[0.05835874 0.58358737 0.06722512 ... 0.60299234 0.06071064 0.6071064 ]\n",
            "\n",
            "UniqueDate's count:45\n",
            "['27-04-2020' '28-04-2020' '29-04-2020' '30-04-2020' '01-05-2020'\n",
            " '02-05-2020' '03-05-2020' '04-05-2020' '05-05-2020' '06-05-2020'\n",
            " '07-05-2020' '08-05-2020' '09-05-2020' '10-05-2020' '11-05-2020'\n",
            " '12-05-2020' '13-05-2020' '14-05-2020' '15-05-2020' '16-05-2020'\n",
            " '17-05-2020' '18-05-2020' '19-05-2020' '20-05-2020' '21-05-2020'\n",
            " '22-05-2020' '23-05-2020' '24-05-2020' '25-05-2020' '26-05-2020'\n",
            " '27-05-2020' '28-05-2020' '29-05-2020' '30-05-2020' '31-05-2020'\n",
            " '01-06-2020' '02-06-2020' '03-06-2020' '04-06-2020' '05-06-2020'\n",
            " '06-06-2020' '07-06-2020' '08-06-2020' '09-06-2020' '10-06-2020']\n",
            "\n",
            "UniqueTarget's count:2\n",
            "['ConfirmedCases' 'Fatalities']\n",
            "\n"
          ]
        }
      ],
      "source": [
        "for i in test_df.columns:\n",
        "    print(f\"Unique{i}'s count:{test_df[i].nunique()}\")\n",
        "    print(f\"{test_df[i].unique()}\\n\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "278a66b4",
      "metadata": {
        "id": "278a66b4",
        "outputId": "b6bd3795-fca9-46dd-c273-a94abfad5ba2"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "UniqueId's count:969640\n",
            "[     1      2      3 ... 969638 969639 969640]\n",
            "\n",
            "UniqueCounty's count:1840\n",
            "[nan 'Autauga' 'Baldwin' ... 'Uinta' 'Washakie' 'Weston']\n",
            "\n",
            "UniqueProvince_State's count:133\n",
            "[nan 'Australian Capital Territory' 'New South Wales' 'Northern Territory'\n",
            " 'Queensland' 'South Australia' 'Tasmania' 'Victoria' 'Western Australia'\n",
            " 'Alberta' 'British Columbia' 'Manitoba' 'New Brunswick'\n",
            " 'Newfoundland and Labrador' 'Northwest Territories' 'Nova Scotia'\n",
            " 'Ontario' 'Prince Edward Island' 'Quebec' 'Saskatchewan' 'Yukon' 'Anhui'\n",
            " 'Beijing' 'Chongqing' 'Fujian' 'Gansu' 'Guangdong' 'Guangxi' 'Guizhou'\n",
            " 'Hainan' 'Hebei' 'Heilongjiang' 'Henan' 'Hong Kong' 'Hubei' 'Hunan'\n",
            " 'Inner Mongolia' 'Jiangsu' 'Jiangxi' 'Jilin' 'Liaoning' 'Macau' 'Ningxia'\n",
            " 'Qinghai' 'Shaanxi' 'Shandong' 'Shanghai' 'Shanxi' 'Sichuan' 'Tianjin'\n",
            " 'Tibet' 'Xinjiang' 'Yunnan' 'Zhejiang' 'Faroe Islands' 'Greenland'\n",
            " 'French Guiana' 'French Polynesia' 'Guadeloupe' 'Martinique' 'Mayotte'\n",
            " 'New Caledonia' 'Reunion' 'Saint Barthelemy' 'Saint Pierre and Miquelon'\n",
            " 'St Martin' 'Aruba' 'Bonaire, Sint Eustatius and Saba' 'Curacao'\n",
            " 'Sint Maarten' 'Alabama' 'Alaska' 'Arizona' 'Arkansas' 'California'\n",
            " 'Colorado' 'Connecticut' 'Delaware' 'District of Columbia' 'Florida'\n",
            " 'Georgia' 'Guam' 'Hawaii' 'Idaho' 'Illinois' 'Indiana' 'Iowa' 'Kansas'\n",
            " 'Kentucky' 'Louisiana' 'Maine' 'Maryland' 'Massachusetts' 'Michigan'\n",
            " 'Minnesota' 'Mississippi' 'Missouri' 'Montana' 'Nebraska' 'Nevada'\n",
            " 'New Hampshire' 'New Jersey' 'New Mexico' 'New York' 'North Carolina'\n",
            " 'North Dakota' 'Ohio' 'Oklahoma' 'Oregon' 'Pennsylvania' 'Puerto Rico'\n",
            " 'Rhode Island' 'South Carolina' 'South Dakota' 'Tennessee' 'Texas' 'Utah'\n",
            " 'Vermont' 'Virgin Islands' 'Virginia' 'Washington' 'West Virginia'\n",
            " 'Wisconsin' 'Wyoming' 'Anguilla' 'Bermuda' 'British Virgin Islands'\n",
            " 'Cayman Islands' 'Channel Islands' 'Falkland Islands (Malvinas)'\n",
            " 'Gibraltar' 'Isle of Man' 'Montserrat' 'Turks and Caicos Islands']\n",
            "\n",
            "UniqueCountry_Region's count:187\n",
            "['Afghanistan' 'Albania' 'Algeria' 'Andorra' 'Angola'\n",
            " 'Antigua and Barbuda' 'Argentina' 'Armenia' 'Australia' 'Austria'\n",
            " 'Azerbaijan' 'Bahamas' 'Bahrain' 'Bangladesh' 'Barbados' 'Belarus'\n",
            " 'Belgium' 'Belize' 'Benin' 'Bhutan' 'Bolivia' 'Bosnia and Herzegovina'\n",
            " 'Botswana' 'Brazil' 'Brunei' 'Bulgaria' 'Burkina Faso' 'Burma' 'Burundi'\n",
            " 'Cabo Verde' 'Cambodia' 'Cameroon' 'Canada' 'Central African Republic'\n",
            " 'Chad' 'Chile' 'China' 'Colombia' 'Comoros' 'Congo (Brazzaville)'\n",
            " 'Congo (Kinshasa)' 'Costa Rica' \"Cote d'Ivoire\" 'Croatia' 'Cuba' 'Cyprus'\n",
            " 'Czechia' 'Denmark' 'Diamond Princess' 'Djibouti' 'Dominica'\n",
            " 'Dominican Republic' 'Ecuador' 'Egypt' 'El Salvador' 'Equatorial Guinea'\n",
            " 'Eritrea' 'Estonia' 'Eswatini' 'Ethiopia' 'Fiji' 'Finland' 'France'\n",
            " 'Gabon' 'Gambia' 'Georgia' 'Germany' 'Ghana' 'Greece' 'Grenada'\n",
            " 'Guatemala' 'Guinea' 'Guinea-Bissau' 'Guyana' 'Haiti' 'Holy See'\n",
            " 'Honduras' 'Hungary' 'Iceland' 'India' 'Indonesia' 'Iran' 'Iraq'\n",
            " 'Ireland' 'Israel' 'Italy' 'Jamaica' 'Japan' 'Jordan' 'Kazakhstan'\n",
            " 'Kenya' 'Korea, South' 'Kosovo' 'Kuwait' 'Kyrgyzstan' 'Laos' 'Latvia'\n",
            " 'Lebanon' 'Liberia' 'Libya' 'Liechtenstein' 'Lithuania' 'Luxembourg'\n",
            " 'MS Zaandam' 'Madagascar' 'Malawi' 'Malaysia' 'Maldives' 'Mali' 'Malta'\n",
            " 'Mauritania' 'Mauritius' 'Mexico' 'Moldova' 'Monaco' 'Mongolia'\n",
            " 'Montenegro' 'Morocco' 'Mozambique' 'Namibia' 'Nepal' 'Netherlands'\n",
            " 'New Zealand' 'Nicaragua' 'Niger' 'Nigeria' 'North Macedonia' 'Norway'\n",
            " 'Oman' 'Pakistan' 'Panama' 'Papua New Guinea' 'Paraguay' 'Peru'\n",
            " 'Philippines' 'Poland' 'Portugal' 'Qatar' 'Romania' 'Russia' 'Rwanda'\n",
            " 'Saint Kitts and Nevis' 'Saint Lucia' 'Saint Vincent and the Grenadines'\n",
            " 'San Marino' 'Sao Tome and Principe' 'Saudi Arabia' 'Senegal' 'Serbia'\n",
            " 'Seychelles' 'Sierra Leone' 'Singapore' 'Slovakia' 'Slovenia' 'Somalia'\n",
            " 'South Africa' 'South Sudan' 'Spain' 'Sri Lanka' 'Sudan' 'Suriname'\n",
            " 'Sweden' 'Switzerland' 'Syria' 'Taiwan*' 'Tajikistan' 'Tanzania'\n",
            " 'Thailand' 'Timor-Leste' 'Togo' 'Trinidad and Tobago' 'Tunisia' 'Turkey'\n",
            " 'US' 'Uganda' 'Ukraine' 'United Arab Emirates' 'United Kingdom' 'Uruguay'\n",
            " 'Uzbekistan' 'Venezuela' 'Vietnam' 'West Bank and Gaza' 'Western Sahara'\n",
            " 'Yemen' 'Zambia' 'Zimbabwe']\n",
            "\n",
            "UniquePopulation's count:3408\n",
            "[27657145  2886026 40400000 ... 28500000 15933883 14240168]\n",
            "\n",
            "UniqueWeight's count:6816\n",
            "[0.05835874 0.58358737 0.06722512 ... 0.60299234 0.06071064 0.6071064 ]\n",
            "\n",
            "UniqueDate's count:140\n",
            "['23-01-2020' '24-01-2020' '25-01-2020' '26-01-2020' '27-01-2020'\n",
            " '28-01-2020' '29-01-2020' '30-01-2020' '31-01-2020' '01-02-2020'\n",
            " '02-02-2020' '03-02-2020' '04-02-2020' '05-02-2020' '06-02-2020'\n",
            " '07-02-2020' '08-02-2020' '09-02-2020' '10-02-2020' '11-02-2020'\n",
            " '12-02-2020' '13-02-2020' '14-02-2020' '15-02-2020' '16-02-2020'\n",
            " '17-02-2020' '18-02-2020' '19-02-2020' '20-02-2020' '21-02-2020'\n",
            " '22-02-2020' '23-02-2020' '24-02-2020' '25-02-2020' '26-02-2020'\n",
            " '27-02-2020' '28-02-2020' '29-02-2020' '01-03-2020' '02-03-2020'\n",
            " '03-03-2020' '04-03-2020' '05-03-2020' '06-03-2020' '07-03-2020'\n",
            " '08-03-2020' '09-03-2020' '10-03-2020' '11-03-2020' '12-03-2020'\n",
            " '13-03-2020' '14-03-2020' '15-03-2020' '16-03-2020' '17-03-2020'\n",
            " '18-03-2020' '19-03-2020' '20-03-2020' '21-03-2020' '22-03-2020'\n",
            " '23-03-2020' '24-03-2020' '25-03-2020' '26-03-2020' '27-03-2020'\n",
            " '28-03-2020' '29-03-2020' '30-03-2020' '31-03-2020' '01-04-2020'\n",
            " '02-04-2020' '03-04-2020' '04-04-2020' '05-04-2020' '06-04-2020'\n",
            " '07-04-2020' '08-04-2020' '09-04-2020' '10-04-2020' '11-04-2020'\n",
            " '12-04-2020' '13-04-2020' '14-04-2020' '15-04-2020' '16-04-2020'\n",
            " '17-04-2020' '18-04-2020' '19-04-2020' '20-04-2020' '21-04-2020'\n",
            " '22-04-2020' '23-04-2020' '24-04-2020' '25-04-2020' '26-04-2020'\n",
            " '27-04-2020' '28-04-2020' '29-04-2020' '30-04-2020' '01-05-2020'\n",
            " '02-05-2020' '03-05-2020' '04-05-2020' '05-05-2020' '06-05-2020'\n",
            " '07-05-2020' '08-05-2020' '09-05-2020' '10-05-2020' '11-05-2020'\n",
            " '12-05-2020' '13-05-2020' '14-05-2020' '15-05-2020' '16-05-2020'\n",
            " '17-05-2020' '18-05-2020' '19-05-2020' '20-05-2020' '21-05-2020'\n",
            " '22-05-2020' '23-05-2020' '24-05-2020' '25-05-2020' '26-05-2020'\n",
            " '27-05-2020' '28-05-2020' '29-05-2020' '30-05-2020' '31-05-2020'\n",
            " '01-06-2020' '02-06-2020' '03-06-2020' '04-06-2020' '05-06-2020'\n",
            " '06-06-2020' '07-06-2020' '08-06-2020' '09-06-2020' '10-06-2020']\n",
            "\n",
            "UniqueTarget's count:2\n",
            "['ConfirmedCases' 'Fatalities']\n",
            "\n",
            "UniqueTargetValue's count:2603\n",
            "[   0    1    3 ... 1650 1326  -21]\n",
            "\n"
          ]
        }
      ],
      "source": [
        "for i in train_df.columns:\n",
        "    print(f\"Unique{i}'s count:{train_df[i].nunique()}\")\n",
        "    print(f\"{train_df[i].unique()}\\n\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "e7f40132",
      "metadata": {
        "id": "e7f40132",
        "outputId": "9bfaa666-d68a-452e-d37c-34decbc0d8c9"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ForecastId</th>\n",
              "      <th>County</th>\n",
              "      <th>Province_State</th>\n",
              "      <th>Country_Region</th>\n",
              "      <th>Population</th>\n",
              "      <th>Weight</th>\n",
              "      <th>Date</th>\n",
              "      <th>Target</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>27657145</td>\n",
              "      <td>0.058359</td>\n",
              "      <td>27-04-2020</td>\n",
              "      <td>ConfirmedCases</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>27657145</td>\n",
              "      <td>0.583587</td>\n",
              "      <td>27-04-2020</td>\n",
              "      <td>Fatalities</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>27657145</td>\n",
              "      <td>0.058359</td>\n",
              "      <td>28-04-2020</td>\n",
              "      <td>ConfirmedCases</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>27657145</td>\n",
              "      <td>0.583587</td>\n",
              "      <td>28-04-2020</td>\n",
              "      <td>Fatalities</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>27657145</td>\n",
              "      <td>0.058359</td>\n",
              "      <td>29-04-2020</td>\n",
              "      <td>ConfirmedCases</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>311665</th>\n",
              "      <td>311666</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Zimbabwe</td>\n",
              "      <td>14240168</td>\n",
              "      <td>0.607106</td>\n",
              "      <td>08-06-2020</td>\n",
              "      <td>Fatalities</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>311666</th>\n",
              "      <td>311667</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Zimbabwe</td>\n",
              "      <td>14240168</td>\n",
              "      <td>0.060711</td>\n",
              "      <td>09-06-2020</td>\n",
              "      <td>ConfirmedCases</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>311667</th>\n",
              "      <td>311668</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Zimbabwe</td>\n",
              "      <td>14240168</td>\n",
              "      <td>0.607106</td>\n",
              "      <td>09-06-2020</td>\n",
              "      <td>Fatalities</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>311668</th>\n",
              "      <td>311669</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Zimbabwe</td>\n",
              "      <td>14240168</td>\n",
              "      <td>0.060711</td>\n",
              "      <td>10-06-2020</td>\n",
              "      <td>ConfirmedCases</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>311669</th>\n",
              "      <td>311670</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Zimbabwe</td>\n",
              "      <td>14240168</td>\n",
              "      <td>0.607106</td>\n",
              "      <td>10-06-2020</td>\n",
              "      <td>Fatalities</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>311670 rows Ã— 8 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "        ForecastId County Province_State Country_Region  Population    Weight  \\\n",
              "0                1    NaN            NaN    Afghanistan    27657145  0.058359   \n",
              "1                2    NaN            NaN    Afghanistan    27657145  0.583587   \n",
              "2                3    NaN            NaN    Afghanistan    27657145  0.058359   \n",
              "3                4    NaN            NaN    Afghanistan    27657145  0.583587   \n",
              "4                5    NaN            NaN    Afghanistan    27657145  0.058359   \n",
              "...            ...    ...            ...            ...         ...       ...   \n",
              "311665      311666    NaN            NaN       Zimbabwe    14240168  0.607106   \n",
              "311666      311667    NaN            NaN       Zimbabwe    14240168  0.060711   \n",
              "311667      311668    NaN            NaN       Zimbabwe    14240168  0.607106   \n",
              "311668      311669    NaN            NaN       Zimbabwe    14240168  0.060711   \n",
              "311669      311670    NaN            NaN       Zimbabwe    14240168  0.607106   \n",
              "\n",
              "              Date          Target  \n",
              "0       27-04-2020  ConfirmedCases  \n",
              "1       27-04-2020      Fatalities  \n",
              "2       28-04-2020  ConfirmedCases  \n",
              "3       28-04-2020      Fatalities  \n",
              "4       29-04-2020  ConfirmedCases  \n",
              "...            ...             ...  \n",
              "311665  08-06-2020      Fatalities  \n",
              "311666  09-06-2020  ConfirmedCases  \n",
              "311667  09-06-2020      Fatalities  \n",
              "311668  10-06-2020  ConfirmedCases  \n",
              "311669  10-06-2020      Fatalities  \n",
              "\n",
              "[311670 rows x 8 columns]"
            ]
          },
          "execution_count": 16,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "test_df"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "01712f06",
      "metadata": {
        "id": "01712f06"
      },
      "source": [
        "# Concept Based Questions:\n",
        "\n",
        "Answer.1-Multicollinearity when two or more independent variables are significantly correlated to each other.It result from the violation of the multiple regression assumptions that there is no apparent linear relationship between two or more independent variables.\n",
        "\n",
        "Multicollinearity does not alter the consistency of the regression estimates. However, it renders them imprecise and unreliable. Multicollinearity makes it nearly impossible to determine how the independent variables influence the dependent variable individually.\n",
        "\n",
        "1.Reducing the number of predictor variables\n",
        "2.Regularization methods\n",
        "3.Collinearity\n",
        "\n",
        "Answer.2-If our dataset is small, we can detect the outlier by just looking at the dataset. But what if we have a large dataset then  We need to use visualization and mathematical techniques.\n",
        "\n",
        "Below are some of the techniques of detecting outliers\n",
        "Univariate ,Univariate ,Multivariate \n",
        "\n",
        "Answer 3 verfitting a model is a condition where a statistical model begins to describe the random error in the data rather than the relationships between variables. This problem occurs when the model is too complex. In regression analysis, overfitting can produce R-squared values, regression coefficients.\n",
        "1.It removes a data point from the dataset.\n",
        "2.Calculates the regression equation.\n",
        "3.Evaluates how well the model predicts.\n",
        "\n",
        "Answer 4 Nonlinear regression generates an equation to describe the nonlinear relationship between a continuous response variable and one or more predictor variables, and predicts new observations.\n",
        "\n",
        "Polynomial regression is an extension of a standard linear regression model. Polynomial regression models the non-linear relationship between a predictor and an outcome variable using the Nth-degree polynomial of the predictor. \n",
        "\n",
        "\n",
        "\n",
        "MCQ Assessment: Python Fundamentals, NumPy, Pandas, and Matplotlib\n",
        " \n",
        " 1.(a)\n",
        " 2.(b) [3, 4, 5]\n",
        " 3.(4)\n",
        " 4.(a)\n",
        " 5.(a,b)\n",
        " 6.(d)\n",
        " 7.(c)\n",
        " 8.(b,c)\n",
        " 9.(b)\n",
        " 10.(a)\n",
        " 11\n",
        " 12.(c)\n",
        " 13.(a)\n",
        " 14.(a)\n",
        " 15. (a)\n",
        " 16.()c\n",
        " 17.(a)\n",
        " 18(a)\n",
        " 19.(a)\n",
        " 20.(b)\n",
        "21.(c)\n",
        "24.(b)\n",
        "25.(c)\n",
        "26(d)\n",
        "28(c)\n",
        "29.a\n",
        "30.c\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n"
      ]
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3 (ipykernel)",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.11.1"
    },
    "colab": {
      "provenance": [],
      "include_colab_link": true
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}