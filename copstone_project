{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/san88806/NUMPY-PRACTISE/blob/main/copstone_project\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "0ed1717d",
      "metadata": {
        "id": "0ed1717d"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "%matplotlib inline\n",
        "import seaborn as sns\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "f85d8727",
      "metadata": {
        "id": "f85d8727",
        "outputId": "5f8e85a2-d659-481c-de28-af2b2ef58e49"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>State_Name</th>\n",
              "      <th>District_Name</th>\n",
              "      <th>Crop_Year</th>\n",
              "      <th>Season</th>\n",
              "      <th>Crop</th>\n",
              "      <th>Area</th>\n",
              "      <th>Production</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Andaman and Nicobar Islands</td>\n",
              "      <td>NICOBARS</td>\n",
              "      <td>2000</td>\n",
              "      <td>Kharif</td>\n",
              "      <td>Arecanut</td>\n",
              "      <td>1254.0</td>\n",
              "      <td>2000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Andaman and Nicobar Islands</td>\n",
              "      <td>NICOBARS</td>\n",
              "      <td>2000</td>\n",
              "      <td>Kharif</td>\n",
              "      <td>Other Kharif pulses</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Andaman and Nicobar Islands</td>\n",
              "      <td>NICOBARS</td>\n",
              "      <td>2000</td>\n",
              "      <td>Kharif</td>\n",
              "      <td>Rice</td>\n",
              "      <td>102.0</td>\n",
              "      <td>321.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Andaman and Nicobar Islands</td>\n",
              "      <td>NICOBARS</td>\n",
              "      <td>2000</td>\n",
              "      <td>Whole Year</td>\n",
              "      <td>Banana</td>\n",
              "      <td>176.0</td>\n",
              "      <td>641.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Andaman and Nicobar Islands</td>\n",
              "      <td>NICOBARS</td>\n",
              "      <td>2000</td>\n",
              "      <td>Whole Year</td>\n",
              "      <td>Cashewnut</td>\n",
              "      <td>720.0</td>\n",
              "      <td>165.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>246086</th>\n",
              "      <td>West Bengal</td>\n",
              "      <td>PURULIA</td>\n",
              "      <td>2014</td>\n",
              "      <td>Summer</td>\n",
              "      <td>Rice</td>\n",
              "      <td>306.0</td>\n",
              "      <td>801.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>246087</th>\n",
              "      <td>West Bengal</td>\n",
              "      <td>PURULIA</td>\n",
              "      <td>2014</td>\n",
              "      <td>Summer</td>\n",
              "      <td>Sesamum</td>\n",
              "      <td>627.0</td>\n",
              "      <td>463.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>246088</th>\n",
              "      <td>West Bengal</td>\n",
              "      <td>PURULIA</td>\n",
              "      <td>2014</td>\n",
              "      <td>Whole Year</td>\n",
              "      <td>Sugarcane</td>\n",
              "      <td>324.0</td>\n",
              "      <td>16250.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>246089</th>\n",
              "      <td>West Bengal</td>\n",
              "      <td>PURULIA</td>\n",
              "      <td>2014</td>\n",
              "      <td>Winter</td>\n",
              "      <td>Rice</td>\n",
              "      <td>279151.0</td>\n",
              "      <td>597899.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>246090</th>\n",
              "      <td>West Bengal</td>\n",
              "      <td>PURULIA</td>\n",
              "      <td>2014</td>\n",
              "      <td>Winter</td>\n",
              "      <td>Sesamum</td>\n",
              "      <td>175.0</td>\n",
              "      <td>88.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>246091 rows Ã— 7 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "                         State_Name District_Name  Crop_Year       Season  \\\n",
              "0       Andaman and Nicobar Islands      NICOBARS       2000  Kharif        \n",
              "1       Andaman and Nicobar Islands      NICOBARS       2000  Kharif        \n",
              "2       Andaman and Nicobar Islands      NICOBARS       2000  Kharif        \n",
              "3       Andaman and Nicobar Islands      NICOBARS       2000  Whole Year    \n",
              "4       Andaman and Nicobar Islands      NICOBARS       2000  Whole Year    \n",
              "...                             ...           ...        ...          ...   \n",
              "246086                  West Bengal       PURULIA       2014  Summer        \n",
              "246087                  West Bengal       PURULIA       2014  Summer        \n",
              "246088                  West Bengal       PURULIA       2014  Whole Year    \n",
              "246089                  West Bengal       PURULIA       2014  Winter        \n",
              "246090                  West Bengal       PURULIA       2014  Winter        \n",
              "\n",
              "                       Crop      Area  Production  \n",
              "0                  Arecanut    1254.0      2000.0  \n",
              "1       Other Kharif pulses       2.0         1.0  \n",
              "2                      Rice     102.0       321.0  \n",
              "3                    Banana     176.0       641.0  \n",
              "4                 Cashewnut     720.0       165.0  \n",
              "...                     ...       ...         ...  \n",
              "246086                 Rice     306.0       801.0  \n",
              "246087              Sesamum     627.0       463.0  \n",
              "246088            Sugarcane     324.0     16250.0  \n",
              "246089                 Rice  279151.0    597899.0  \n",
              "246090              Sesamum     175.0        88.0  \n",
              "\n",
              "[246091 rows x 7 columns]"
            ]
          },
          "execution_count": 3,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "crop_data=pd.read_csv(r\"C:\\Users\\Sangeeta\\Downloads\\crop_production.csv\")\n",
        "crop_data"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "4f9f9a2e",
      "metadata": {
        "id": "4f9f9a2e",
        "outputId": "2be65f0e-bf85-4be9-de16-7729dedd960a"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "(246091, 7)"
            ]
          },
          "execution_count": 4,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "crop_data.shape\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "9426cc64",
      "metadata": {
        "id": "9426cc64",
        "outputId": "64220adc-3ec4-4f4c-f694-7c2a53dbc87a"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "Index(['State_Name', 'District_Name', 'Crop_Year', 'Season', 'Crop', 'Area',\n",
              "       'Production'],\n",
              "      dtype='object')"
            ]
          },
          "execution_count": 5,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "# dataset columns\n",
        "crop_data.columns"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "42abb37e",
      "metadata": {
        "id": "42abb37e",
        "outputId": "9a3921e6-7c32-477f-e50f-71715f3baa44"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Crop_Year</th>\n",
              "      <th>Area</th>\n",
              "      <th>Production</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>246091.000000</td>\n",
              "      <td>2.460910e+05</td>\n",
              "      <td>2.423610e+05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>2005.643018</td>\n",
              "      <td>1.200282e+04</td>\n",
              "      <td>5.825034e+05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>4.952164</td>\n",
              "      <td>5.052340e+04</td>\n",
              "      <td>1.706581e+07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>1997.000000</td>\n",
              "      <td>4.000000e-02</td>\n",
              "      <td>0.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>2002.000000</td>\n",
              "      <td>8.000000e+01</td>\n",
              "      <td>8.800000e+01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>2006.000000</td>\n",
              "      <td>5.820000e+02</td>\n",
              "      <td>7.290000e+02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>2010.000000</td>\n",
              "      <td>4.392000e+03</td>\n",
              "      <td>7.023000e+03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>2015.000000</td>\n",
              "      <td>8.580100e+06</td>\n",
              "      <td>1.250800e+09</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "           Crop_Year          Area    Production\n",
              "count  246091.000000  2.460910e+05  2.423610e+05\n",
              "mean     2005.643018  1.200282e+04  5.825034e+05\n",
              "std         4.952164  5.052340e+04  1.706581e+07\n",
              "min      1997.000000  4.000000e-02  0.000000e+00\n",
              "25%      2002.000000  8.000000e+01  8.800000e+01\n",
              "50%      2006.000000  5.820000e+02  7.290000e+02\n",
              "75%      2010.000000  4.392000e+03  7.023000e+03\n",
              "max      2015.000000  8.580100e+06  1.250800e+09"
            ]
          },
          "execution_count": 6,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "# statistical inference of the dataset\n",
        "\n",
        "crop_data.describe()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "6f291fd4",
      "metadata": {
        "id": "6f291fd4",
        "outputId": "1c2026b7-9557-475a-dda3-9abe510b42b5"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "State_Name          0\n",
              "District_Name       0\n",
              "Crop_Year           0\n",
              "Season              0\n",
              "Crop                0\n",
              "Area                0\n",
              "Production       3730\n",
              "dtype: int64"
            ]
          },
          "execution_count": 7,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "# Checking missing values of the dataset in each column\n",
        "crop_data.isnull().sum()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "ab2bd2cb",
      "metadata": {
        "id": "ab2bd2cb",
        "outputId": "1452bc2f-422e-45a1-d546-195c2d93e5e2"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>State_Name</th>\n",
              "      <th>District_Name</th>\n",
              "      <th>Crop_Year</th>\n",
              "      <th>Season</th>\n",
              "      <th>Crop</th>\n",
              "      <th>Area</th>\n",
              "      <th>Production</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Andaman and Nicobar Islands</td>\n",
              "      <td>NICOBARS</td>\n",
              "      <td>2000</td>\n",
              "      <td>Kharif</td>\n",
              "      <td>Arecanut</td>\n",
              "      <td>1254.0</td>\n",
              "      <td>2000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Andaman and Nicobar Islands</td>\n",
              "      <td>NICOBARS</td>\n",
              "      <td>2000</td>\n",
              "      <td>Kharif</td>\n",
              "      <td>Other Kharif pulses</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Andaman and Nicobar Islands</td>\n",
              "      <td>NICOBARS</td>\n",
              "      <td>2000</td>\n",
              "      <td>Kharif</td>\n",
              "      <td>Rice</td>\n",
              "      <td>102.0</td>\n",
              "      <td>321.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Andaman and Nicobar Islands</td>\n",
              "      <td>NICOBARS</td>\n",
              "      <td>2000</td>\n",
              "      <td>Whole Year</td>\n",
              "      <td>Banana</td>\n",
              "      <td>176.0</td>\n",
              "      <td>641.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Andaman and Nicobar Islands</td>\n",
              "      <td>NICOBARS</td>\n",
              "      <td>2000</td>\n",
              "      <td>Whole Year</td>\n",
              "      <td>Cashewnut</td>\n",
              "      <td>720.0</td>\n",
              "      <td>165.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>246086</th>\n",
              "      <td>West Bengal</td>\n",
              "      <td>PURULIA</td>\n",
              "      <td>2014</td>\n",
              "      <td>Summer</td>\n",
              "      <td>Rice</td>\n",
              "      <td>306.0</td>\n",
              "      <td>801.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>246087</th>\n",
              "      <td>West Bengal</td>\n",
              "      <td>PURULIA</td>\n",
              "      <td>2014</td>\n",
              "      <td>Summer</td>\n",
              "      <td>Sesamum</td>\n",
              "      <td>627.0</td>\n",
              "      <td>463.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>246088</th>\n",
              "      <td>West Bengal</td>\n",
              "      <td>PURULIA</td>\n",
              "      <td>2014</td>\n",
              "      <td>Whole Year</td>\n",
              "      <td>Sugarcane</td>\n",
              "      <td>324.0</td>\n",
              "      <td>16250.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>246089</th>\n",
              "      <td>West Bengal</td>\n",
              "      <td>PURULIA</td>\n",
              "      <td>2014</td>\n",
              "      <td>Winter</td>\n",
              "      <td>Rice</td>\n",
              "      <td>279151.0</td>\n",
              "      <td>597899.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>246090</th>\n",
              "      <td>West Bengal</td>\n",
              "      <td>PURULIA</td>\n",
              "      <td>2014</td>\n",
              "      <td>Winter</td>\n",
              "      <td>Sesamum</td>\n",
              "      <td>175.0</td>\n",
              "      <td>88.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>242361 rows Ã— 7 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "                         State_Name District_Name  Crop_Year       Season  \\\n",
              "0       Andaman and Nicobar Islands      NICOBARS       2000  Kharif        \n",
              "1       Andaman and Nicobar Islands      NICOBARS       2000  Kharif        \n",
              "2       Andaman and Nicobar Islands      NICOBARS       2000  Kharif        \n",
              "3       Andaman and Nicobar Islands      NICOBARS       2000  Whole Year    \n",
              "4       Andaman and Nicobar Islands      NICOBARS       2000  Whole Year    \n",
              "...                             ...           ...        ...          ...   \n",
              "246086                  West Bengal       PURULIA       2014  Summer        \n",
              "246087                  West Bengal       PURULIA       2014  Summer        \n",
              "246088                  West Bengal       PURULIA       2014  Whole Year    \n",
              "246089                  West Bengal       PURULIA       2014  Winter        \n",
              "246090                  West Bengal       PURULIA       2014  Winter        \n",
              "\n",
              "                       Crop      Area  Production  \n",
              "0                  Arecanut    1254.0      2000.0  \n",
              "1       Other Kharif pulses       2.0         1.0  \n",
              "2                      Rice     102.0       321.0  \n",
              "3                    Banana     176.0       641.0  \n",
              "4                 Cashewnut     720.0       165.0  \n",
              "...                     ...       ...         ...  \n",
              "246086                 Rice     306.0       801.0  \n",
              "246087              Sesamum     627.0       463.0  \n",
              "246088            Sugarcane     324.0     16250.0  \n",
              "246089                 Rice  279151.0    597899.0  \n",
              "246090              Sesamum     175.0        88.0  \n",
              "\n",
              "[242361 rows x 7 columns]"
            ]
          },
          "execution_count": 8,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "# Dropping missing values\n",
        "crop_data = crop_data.dropna()\n",
        "crop_data"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "15a31509",
      "metadata": {
        "id": "15a31509",
        "outputId": "403f1613-9096-4bf2-9a12-6dbbdd4958e6"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "False"
            ]
          },
          "execution_count": 9,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "#checking\n",
        "crop_data.isnull().values.any()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "a1e58c3f",
      "metadata": {
        "id": "a1e58c3f",
        "outputId": "6e492dbd-1177-41f4-943f-fdd0307c71ae"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "array(['Andaman and Nicobar Islands', 'Andhra Pradesh',\n",
              "       'Arunachal Pradesh', 'Assam', 'Bihar', 'Chandigarh',\n",
              "       'Chhattisgarh', 'Dadra and Nagar Haveli', 'Goa', 'Gujarat',\n",
              "       'Haryana', 'Himachal Pradesh', 'Jammu and Kashmir ', 'Jharkhand',\n",
              "       'Karnataka', 'Kerala', 'Madhya Pradesh', 'Maharashtra', 'Manipur',\n",
              "       'Meghalaya', 'Mizoram', 'Nagaland', 'Odisha', 'Puducherry',\n",
              "       'Punjab', 'Rajasthan', 'Sikkim', 'Tamil Nadu', 'Telangana ',\n",
              "       'Tripura', 'Uttar Pradesh', 'Uttarakhand', 'West Bengal'],\n",
              "      dtype=object)"
            ]
          },
          "execution_count": 10,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "# Displaying State Names present in the dataset\n",
        "crop_data.State_Name.unique()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "a257e5d1",
      "metadata": {
        "id": "a257e5d1",
        "outputId": "8df33682-d089-4026-b697-29e64f37fd5c"
      },
      "outputs": [
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "C:\\Users\\Sangeeta\\AppData\\Local\\Temp\\ipykernel_7808\\416474790.py:3: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  crop_data['Yield'] = (crop_data['Production'] / crop_data['Area'])\n"
          ]
        },
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>State_Name</th>\n",
              "      <th>District_Name</th>\n",
              "      <th>Crop_Year</th>\n",
              "      <th>Season</th>\n",
              "      <th>Crop</th>\n",
              "      <th>Area</th>\n",
              "      <th>Production</th>\n",
              "      <th>Yield</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Andaman and Nicobar Islands</td>\n",
              "      <td>NICOBARS</td>\n",
              "      <td>2000</td>\n",
              "      <td>Kharif</td>\n",
              "      <td>Arecanut</td>\n",
              "      <td>1254.0</td>\n",
              "      <td>2000.0</td>\n",
              "      <td>1.594896</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Andaman and Nicobar Islands</td>\n",
              "      <td>NICOBARS</td>\n",
              "      <td>2000</td>\n",
              "      <td>Kharif</td>\n",
              "      <td>Other Kharif pulses</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.500000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Andaman and Nicobar Islands</td>\n",
              "      <td>NICOBARS</td>\n",
              "      <td>2000</td>\n",
              "      <td>Kharif</td>\n",
              "      <td>Rice</td>\n",
              "      <td>102.0</td>\n",
              "      <td>321.0</td>\n",
              "      <td>3.147059</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Andaman and Nicobar Islands</td>\n",
              "      <td>NICOBARS</td>\n",
              "      <td>2000</td>\n",
              "      <td>Whole Year</td>\n",
              "      <td>Banana</td>\n",
              "      <td>176.0</td>\n",
              "      <td>641.0</td>\n",
              "      <td>3.642045</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Andaman and Nicobar Islands</td>\n",
              "      <td>NICOBARS</td>\n",
              "      <td>2000</td>\n",
              "      <td>Whole Year</td>\n",
              "      <td>Cashewnut</td>\n",
              "      <td>720.0</td>\n",
              "      <td>165.0</td>\n",
              "      <td>0.229167</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Andaman and Nicobar Islands</td>\n",
              "      <td>NICOBARS</td>\n",
              "      <td>2000</td>\n",
              "      <td>Whole Year</td>\n",
              "      <td>Coconut</td>\n",
              "      <td>18168.0</td>\n",
              "      <td>65100000.0</td>\n",
              "      <td>3583.223250</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Andaman and Nicobar Islands</td>\n",
              "      <td>NICOBARS</td>\n",
              "      <td>2000</td>\n",
              "      <td>Whole Year</td>\n",
              "      <td>Dry ginger</td>\n",
              "      <td>36.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>2.777778</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Andaman and Nicobar Islands</td>\n",
              "      <td>NICOBARS</td>\n",
              "      <td>2000</td>\n",
              "      <td>Whole Year</td>\n",
              "      <td>Sugarcane</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Andaman and Nicobar Islands</td>\n",
              "      <td>NICOBARS</td>\n",
              "      <td>2000</td>\n",
              "      <td>Whole Year</td>\n",
              "      <td>Sweet potato</td>\n",
              "      <td>5.0</td>\n",
              "      <td>15.0</td>\n",
              "      <td>3.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Andaman and Nicobar Islands</td>\n",
              "      <td>NICOBARS</td>\n",
              "      <td>2000</td>\n",
              "      <td>Whole Year</td>\n",
              "      <td>Tapioca</td>\n",
              "      <td>40.0</td>\n",
              "      <td>169.0</td>\n",
              "      <td>4.225000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                    State_Name District_Name  Crop_Year       Season  \\\n",
              "0  Andaman and Nicobar Islands      NICOBARS       2000  Kharif        \n",
              "1  Andaman and Nicobar Islands      NICOBARS       2000  Kharif        \n",
              "2  Andaman and Nicobar Islands      NICOBARS       2000  Kharif        \n",
              "3  Andaman and Nicobar Islands      NICOBARS       2000  Whole Year    \n",
              "4  Andaman and Nicobar Islands      NICOBARS       2000  Whole Year    \n",
              "5  Andaman and Nicobar Islands      NICOBARS       2000  Whole Year    \n",
              "6  Andaman and Nicobar Islands      NICOBARS       2000  Whole Year    \n",
              "7  Andaman and Nicobar Islands      NICOBARS       2000  Whole Year    \n",
              "8  Andaman and Nicobar Islands      NICOBARS       2000  Whole Year    \n",
              "9  Andaman and Nicobar Islands      NICOBARS       2000  Whole Year    \n",
              "\n",
              "                  Crop     Area  Production        Yield  \n",
              "0             Arecanut   1254.0      2000.0     1.594896  \n",
              "1  Other Kharif pulses      2.0         1.0     0.500000  \n",
              "2                 Rice    102.0       321.0     3.147059  \n",
              "3               Banana    176.0       641.0     3.642045  \n",
              "4            Cashewnut    720.0       165.0     0.229167  \n",
              "5             Coconut   18168.0  65100000.0  3583.223250  \n",
              "6           Dry ginger     36.0       100.0     2.777778  \n",
              "7            Sugarcane      1.0         2.0     2.000000  \n",
              "8         Sweet potato      5.0        15.0     3.000000  \n",
              "9              Tapioca     40.0       169.0     4.225000  "
            ]
          },
          "execution_count": 11,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "# Adding a new column Yield which indicates Production per unit Area.\n",
        "\n",
        "crop_data['Yield'] = (crop_data['Production'] / crop_data['Area'])\n",
        "crop_data.head(10)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "206bc024",
      "metadata": {
        "id": "206bc024"
      },
      "outputs": [],
      "source": [
        "# Dropping unnecessary columns\n",
        "\n",
        "data = crop_data.drop(['State_Name'], axis = 1)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "9c0970e5",
      "metadata": {
        "id": "9c0970e5",
        "outputId": "6a073ace-cfa7-40cb-d5f4-758501e33c97"
      },
      "outputs": [
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "C:\\Users\\Sangeeta\\AppData\\Local\\Temp\\ipykernel_7808\\2057684327.py:1: FutureWarning: The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.\n",
            "  corr=data.corr()\n"
          ]
        }
      ],
      "source": [
        "corr=data.corr()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "5f06a728",
      "metadata": {
        "id": "5f06a728",
        "outputId": "595a51a1-a3ad-4345-fce7-a6f69c7d6857"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Crop_Year</th>\n",
              "      <th>Area</th>\n",
              "      <th>Production</th>\n",
              "      <th>Yield</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Crop_Year</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.025305</td>\n",
              "      <td>0.006989</td>\n",
              "      <td>0.013499</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Area</th>\n",
              "      <td>-0.025305</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.040587</td>\n",
              "      <td>0.001822</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Production</th>\n",
              "      <td>0.006989</td>\n",
              "      <td>0.040587</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.330961</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Yield</th>\n",
              "      <td>0.013499</td>\n",
              "      <td>0.001822</td>\n",
              "      <td>0.330961</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "            Crop_Year      Area  Production     Yield\n",
              "Crop_Year    1.000000 -0.025305    0.006989  0.013499\n",
              "Area        -0.025305  1.000000    0.040587  0.001822\n",
              "Production   0.006989  0.040587    1.000000  0.330961\n",
              "Yield        0.013499  0.001822    0.330961  1.000000"
            ]
          },
          "execution_count": 14,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "corr"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "219934ad",
      "metadata": {
        "id": "219934ad",
        "outputId": "5c302878-e443-4304-8301-63aeb92c725e"
      },
      "outputs": [
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "C:\\Users\\Sangeeta\\AppData\\Local\\Temp\\ipykernel_7808\\1522484008.py:1: FutureWarning: The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.\n",
            "  sns.heatmap(data.corr(), annot =True)\n"
          ]
        },
        {
          "data": {
            "text/plain": [
              "Text(0.5, 1.0, 'Correlation Matrix')"
            ]
          },
          "execution_count": 15,
          "metadata": {},
          "output_type": "execute_result"
        },
        {
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 640x480 with 2 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "sns.heatmap(data.corr(), annot =True)\n",
        "plt.title('Correlation Matrix')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "d2096266",
      "metadata": {
        "id": "d2096266",
        "outputId": "cd92e474-52f7-4132-c20e-8c609d4aab23"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Crop_Year</th>\n",
              "      <th>Area</th>\n",
              "      <th>Production</th>\n",
              "      <th>Yield</th>\n",
              "      <th>District_Name_24 PARAGANAS NORTH</th>\n",
              "      <th>District_Name_24 PARAGANAS SOUTH</th>\n",
              "      <th>District_Name_ADILABAD</th>\n",
              "      <th>District_Name_AGAR MALWA</th>\n",
              "      <th>District_Name_AGRA</th>\n",
              "      <th>District_Name_AHMADABAD</th>\n",
              "      <th>...</th>\n",
              "      <th>Crop_Turmeric</th>\n",
              "      <th>Crop_Turnip</th>\n",
              "      <th>Crop_Urad</th>\n",
              "      <th>Crop_Varagu</th>\n",
              "      <th>Crop_Water Melon</th>\n",
              "      <th>Crop_Wheat</th>\n",
              "      <th>Crop_Yam</th>\n",
              "      <th>Crop_other fibres</th>\n",
              "      <th>Crop_other misc. pulses</th>\n",
              "      <th>Crop_other oilseeds</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2000</td>\n",
              "      <td>1254.0</td>\n",
              "      <td>2000.0</td>\n",
              "      <td>1.594896</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2000</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.500000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2000</td>\n",
              "      <td>102.0</td>\n",
              "      <td>321.0</td>\n",
              "      <td>3.147059</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2000</td>\n",
              "      <td>176.0</td>\n",
              "      <td>641.0</td>\n",
              "      <td>3.642045</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2000</td>\n",
              "      <td>720.0</td>\n",
              "      <td>165.0</td>\n",
              "      <td>0.229167</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>246086</th>\n",
              "      <td>2014</td>\n",
              "      <td>306.0</td>\n",
              "      <td>801.0</td>\n",
              "      <td>2.617647</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>246087</th>\n",
              "      <td>2014</td>\n",
              "      <td>627.0</td>\n",
              "      <td>463.0</td>\n",
              "      <td>0.738437</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>246088</th>\n",
              "      <td>2014</td>\n",
              "      <td>324.0</td>\n",
              "      <td>16250.0</td>\n",
              "      <td>50.154321</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>246089</th>\n",
              "      <td>2014</td>\n",
              "      <td>279151.0</td>\n",
              "      <td>597899.0</td>\n",
              "      <td>2.141848</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>246090</th>\n",
              "      <td>2014</td>\n",
              "      <td>175.0</td>\n",
              "      <td>88.0</td>\n",
              "      <td>0.502857</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>242361 rows Ã— 780 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "        Crop_Year      Area  Production      Yield  \\\n",
              "0            2000    1254.0      2000.0   1.594896   \n",
              "1            2000       2.0         1.0   0.500000   \n",
              "2            2000     102.0       321.0   3.147059   \n",
              "3            2000     176.0       641.0   3.642045   \n",
              "4            2000     720.0       165.0   0.229167   \n",
              "...           ...       ...         ...        ...   \n",
              "246086       2014     306.0       801.0   2.617647   \n",
              "246087       2014     627.0       463.0   0.738437   \n",
              "246088       2014     324.0     16250.0  50.154321   \n",
              "246089       2014  279151.0    597899.0   2.141848   \n",
              "246090       2014     175.0        88.0   0.502857   \n",
              "\n",
              "        District_Name_24 PARAGANAS NORTH  District_Name_24 PARAGANAS SOUTH  \\\n",
              "0                                      0                                 0   \n",
              "1                                      0                                 0   \n",
              "2                                      0                                 0   \n",
              "3                                      0                                 0   \n",
              "4                                      0                                 0   \n",
              "...                                  ...                               ...   \n",
              "246086                                 0                                 0   \n",
              "246087                                 0                                 0   \n",
              "246088                                 0                                 0   \n",
              "246089                                 0                                 0   \n",
              "246090                                 0                                 0   \n",
              "\n",
              "        District_Name_ADILABAD  District_Name_AGAR MALWA  District_Name_AGRA  \\\n",
              "0                            0                         0                   0   \n",
              "1                            0                         0                   0   \n",
              "2                            0                         0                   0   \n",
              "3                            0                         0                   0   \n",
              "4                            0                         0                   0   \n",
              "...                        ...                       ...                 ...   \n",
              "246086                       0                         0                   0   \n",
              "246087                       0                         0                   0   \n",
              "246088                       0                         0                   0   \n",
              "246089                       0                         0                   0   \n",
              "246090                       0                         0                   0   \n",
              "\n",
              "        District_Name_AHMADABAD  ...  Crop_Turmeric  Crop_Turnip  Crop_Urad  \\\n",
              "0                             0  ...              0            0          0   \n",
              "1                             0  ...              0            0          0   \n",
              "2                             0  ...              0            0          0   \n",
              "3                             0  ...              0            0          0   \n",
              "4                             0  ...              0            0          0   \n",
              "...                         ...  ...            ...          ...        ...   \n",
              "246086                        0  ...              0            0          0   \n",
              "246087                        0  ...              0            0          0   \n",
              "246088                        0  ...              0            0          0   \n",
              "246089                        0  ...              0            0          0   \n",
              "246090                        0  ...              0            0          0   \n",
              "\n",
              "        Crop_Varagu  Crop_Water Melon  Crop_Wheat  Crop_Yam  \\\n",
              "0                 0                 0           0         0   \n",
              "1                 0                 0           0         0   \n",
              "2                 0                 0           0         0   \n",
              "3                 0                 0           0         0   \n",
              "4                 0                 0           0         0   \n",
              "...             ...               ...         ...       ...   \n",
              "246086            0                 0           0         0   \n",
              "246087            0                 0           0         0   \n",
              "246088            0                 0           0         0   \n",
              "246089            0                 0           0         0   \n",
              "246090            0                 0           0         0   \n",
              "\n",
              "        Crop_other fibres  Crop_other misc. pulses  Crop_other oilseeds  \n",
              "0                       0                        0                    0  \n",
              "1                       0                        0                    0  \n",
              "2                       0                        0                    0  \n",
              "3                       0                        0                    0  \n",
              "4                       0                        0                    0  \n",
              "...                   ...                      ...                  ...  \n",
              "246086                  0                        0                    0  \n",
              "246087                  0                        0                    0  \n",
              "246088                  0                        0                    0  \n",
              "246089                  0                        0                    0  \n",
              "246090                  0                        0                    0  \n",
              "\n",
              "[242361 rows x 780 columns]"
            ]
          },
          "execution_count": 16,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "dummy = pd.get_dummies(data)\n",
        "dummy"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "f029b518",
      "metadata": {
        "id": "f029b518"
      },
      "source": [
        "Splitting dataset into train and test dataset\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "120fe178",
      "metadata": {
        "id": "120fe178"
      },
      "outputs": [],
      "source": [
        "from sklearn.model_selection import train_test_split\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "70160b35",
      "metadata": {
        "id": "70160b35"
      },
      "outputs": [],
      "source": [
        "x = dummy.drop([\"Production\",\"Yield\"], axis=1)\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "4592a2c6",
      "metadata": {
        "id": "4592a2c6"
      },
      "outputs": [],
      "source": [
        "y = dummy[\"Production\"]\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "76b0cfce",
      "metadata": {
        "id": "76b0cfce"
      },
      "outputs": [],
      "source": [
        "# Splitting data set - 25% test dataset and 75%\n",
        "\n",
        "x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.25, random_state=5)\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "778f1298",
      "metadata": {
        "id": "778f1298",
        "outputId": "8d5e6acb-f725-4e8d-a022-bc53ae0c643d"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Crop_Year</th>\n",
              "      <th>Area</th>\n",
              "      <th>District_Name_24 PARAGANAS NORTH</th>\n",
              "      <th>District_Name_24 PARAGANAS SOUTH</th>\n",
              "      <th>District_Name_ADILABAD</th>\n",
              "      <th>District_Name_AGAR MALWA</th>\n",
              "      <th>District_Name_AGRA</th>\n",
              "      <th>District_Name_AHMADABAD</th>\n",
              "      <th>District_Name_AHMEDNAGAR</th>\n",
              "      <th>District_Name_AIZAWL</th>\n",
              "      <th>...</th>\n",
              "      <th>Crop_Turmeric</th>\n",
              "      <th>Crop_Turnip</th>\n",
              "      <th>Crop_Urad</th>\n",
              "      <th>Crop_Varagu</th>\n",
              "      <th>Crop_Water Melon</th>\n",
              "      <th>Crop_Wheat</th>\n",
              "      <th>Crop_Yam</th>\n",
              "      <th>Crop_other fibres</th>\n",
              "      <th>Crop_other misc. pulses</th>\n",
              "      <th>Crop_other oilseeds</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>201072</th>\n",
              "      <td>2013</td>\n",
              "      <td>16.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>191897</th>\n",
              "      <td>1998</td>\n",
              "      <td>5400.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43814</th>\n",
              "      <td>2000</td>\n",
              "      <td>2968.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32815</th>\n",
              "      <td>2013</td>\n",
              "      <td>211.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>62249</th>\n",
              "      <td>2006</td>\n",
              "      <td>1700.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>236131</th>\n",
              "      <td>2000</td>\n",
              "      <td>207.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>127145</th>\n",
              "      <td>2007</td>\n",
              "      <td>39.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20536</th>\n",
              "      <td>2005</td>\n",
              "      <td>43.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18709</th>\n",
              "      <td>2011</td>\n",
              "      <td>2489.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35767</th>\n",
              "      <td>1999</td>\n",
              "      <td>67.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>181770 rows Ã— 778 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "        Crop_Year    Area  District_Name_24 PARAGANAS NORTH  \\\n",
              "201072       2013    16.0                                 0   \n",
              "191897       1998  5400.0                                 0   \n",
              "43814        2000  2968.0                                 0   \n",
              "32815        2013   211.0                                 0   \n",
              "62249        2006  1700.0                                 0   \n",
              "...           ...     ...                               ...   \n",
              "236131       2000   207.0                                 0   \n",
              "127145       2007    39.0                                 0   \n",
              "20536        2005    43.0                                 0   \n",
              "18709        2011  2489.0                                 0   \n",
              "35767        1999    67.0                                 0   \n",
              "\n",
              "        District_Name_24 PARAGANAS SOUTH  District_Name_ADILABAD  \\\n",
              "201072                                 0                       0   \n",
              "191897                                 0                       0   \n",
              "43814                                  0                       0   \n",
              "32815                                  0                       0   \n",
              "62249                                  0                       0   \n",
              "...                                  ...                     ...   \n",
              "236131                                 0                       0   \n",
              "127145                                 0                       0   \n",
              "20536                                  0                       0   \n",
              "18709                                  0                       0   \n",
              "35767                                  0                       0   \n",
              "\n",
              "        District_Name_AGAR MALWA  District_Name_AGRA  District_Name_AHMADABAD  \\\n",
              "201072                         0                   0                        0   \n",
              "191897                         0                   0                        0   \n",
              "43814                          0                   0                        0   \n",
              "32815                          0                   0                        0   \n",
              "62249                          0                   0                        0   \n",
              "...                          ...                 ...                      ...   \n",
              "236131                         0                   0                        0   \n",
              "127145                         0                   0                        0   \n",
              "20536                          0                   0                        0   \n",
              "18709                          0                   0                        0   \n",
              "35767                          0                   0                        0   \n",
              "\n",
              "        District_Name_AHMEDNAGAR  District_Name_AIZAWL  ...  Crop_Turmeric  \\\n",
              "201072                         0                     0  ...              0   \n",
              "191897                         0                     0  ...              0   \n",
              "43814                          0                     0  ...              0   \n",
              "32815                          0                     0  ...              0   \n",
              "62249                          0                     0  ...              0   \n",
              "...                          ...                   ...  ...            ...   \n",
              "236131                         0                     0  ...              0   \n",
              "127145                         0                     0  ...              0   \n",
              "20536                          0                     0  ...              0   \n",
              "18709                          0                     0  ...              0   \n",
              "35767                          0                     0  ...              0   \n",
              "\n",
              "        Crop_Turnip  Crop_Urad  Crop_Varagu  Crop_Water Melon  Crop_Wheat  \\\n",
              "201072            0          0            0                 0           0   \n",
              "191897            0          0            0                 0           0   \n",
              "43814             0          0            0                 0           0   \n",
              "32815             0          0            0                 0           0   \n",
              "62249             0          0            0                 0           0   \n",
              "...             ...        ...          ...               ...         ...   \n",
              "236131            0          0            0                 0           0   \n",
              "127145            0          0            0                 0           0   \n",
              "20536             0          0            0                 0           0   \n",
              "18709             0          0            0                 0           0   \n",
              "35767             0          0            0                 0           0   \n",
              "\n",
              "        Crop_Yam  Crop_other fibres  Crop_other misc. pulses  \\\n",
              "201072         0                  0                        0   \n",
              "191897         0                  0                        0   \n",
              "43814          0                  0                        0   \n",
              "32815          0                  0                        0   \n",
              "62249          0                  0                        0   \n",
              "...          ...                ...                      ...   \n",
              "236131         0                  0                        0   \n",
              "127145         0                  0                        0   \n",
              "20536          0                  0                        0   \n",
              "18709          0                  0                        0   \n",
              "35767          0                  0                        0   \n",
              "\n",
              "        Crop_other oilseeds  \n",
              "201072                    0  \n",
              "191897                    0  \n",
              "43814                     0  \n",
              "32815                     0  \n",
              "62249                     0  \n",
              "...                     ...  \n",
              "236131                    0  \n",
              "127145                    0  \n",
              "20536                     0  \n",
              "18709                     0  \n",
              "35767                     0  \n",
              "\n",
              "[181770 rows x 778 columns]"
            ]
          },
          "execution_count": 21,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "x_train"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "83df5684",
      "metadata": {
        "id": "83df5684",
        "outputId": "0ab57d28-9e3f-443b-b52e-55867573aa11"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "201072      11.0\n",
              "191897    2000.0\n",
              "43814     2555.0\n",
              "32815      175.0\n",
              "62249     1400.0\n",
              "           ...  \n",
              "236131     139.0\n",
              "127145      44.0\n",
              "20536       27.0\n",
              "18709     4779.0\n",
              "35767       81.0\n",
              "Name: Production, Length: 181770, dtype: float64"
            ]
          },
          "execution_count": 22,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "y_train"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "be3e77fe",
      "metadata": {
        "id": "be3e77fe",
        "outputId": "48425afd-0cda-477e-f749-778343e4be04"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Crop_Year</th>\n",
              "      <th>Area</th>\n",
              "      <th>District_Name_24 PARAGANAS NORTH</th>\n",
              "      <th>District_Name_24 PARAGANAS SOUTH</th>\n",
              "      <th>District_Name_ADILABAD</th>\n",
              "      <th>District_Name_AGAR MALWA</th>\n",
              "      <th>District_Name_AGRA</th>\n",
              "      <th>District_Name_AHMADABAD</th>\n",
              "      <th>District_Name_AHMEDNAGAR</th>\n",
              "      <th>District_Name_AIZAWL</th>\n",
              "      <th>...</th>\n",
              "      <th>Crop_Turmeric</th>\n",
              "      <th>Crop_Turnip</th>\n",
              "      <th>Crop_Urad</th>\n",
              "      <th>Crop_Varagu</th>\n",
              "      <th>Crop_Water Melon</th>\n",
              "      <th>Crop_Wheat</th>\n",
              "      <th>Crop_Yam</th>\n",
              "      <th>Crop_other fibres</th>\n",
              "      <th>Crop_other misc. pulses</th>\n",
              "      <th>Crop_other oilseeds</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>188194</th>\n",
              "      <td>2001</td>\n",
              "      <td>10111.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>159133</th>\n",
              "      <td>2003</td>\n",
              "      <td>1070.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>86095</th>\n",
              "      <td>2008</td>\n",
              "      <td>1149.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>163014</th>\n",
              "      <td>2012</td>\n",
              "      <td>256000.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>182360</th>\n",
              "      <td>2009</td>\n",
              "      <td>331.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>181551</th>\n",
              "      <td>2010</td>\n",
              "      <td>82.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>222641</th>\n",
              "      <td>2000</td>\n",
              "      <td>619.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>218121</th>\n",
              "      <td>2009</td>\n",
              "      <td>371.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>237704</th>\n",
              "      <td>2005</td>\n",
              "      <td>15427.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>62041</th>\n",
              "      <td>2005</td>\n",
              "      <td>100.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>60591 rows Ã— 778 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "        Crop_Year      Area  District_Name_24 PARAGANAS NORTH  \\\n",
              "188194       2001   10111.0                                 0   \n",
              "159133       2003    1070.0                                 0   \n",
              "86095        2008    1149.0                                 0   \n",
              "163014       2012  256000.0                                 0   \n",
              "182360       2009     331.0                                 0   \n",
              "...           ...       ...                               ...   \n",
              "181551       2010      82.0                                 0   \n",
              "222641       2000     619.0                                 0   \n",
              "218121       2009     371.0                                 0   \n",
              "237704       2005   15427.0                                 0   \n",
              "62041        2005     100.0                                 0   \n",
              "\n",
              "        District_Name_24 PARAGANAS SOUTH  District_Name_ADILABAD  \\\n",
              "188194                                 0                       0   \n",
              "159133                                 0                       0   \n",
              "86095                                  0                       0   \n",
              "163014                                 0                       0   \n",
              "182360                                 0                       0   \n",
              "...                                  ...                     ...   \n",
              "181551                                 0                       0   \n",
              "222641                                 0                       0   \n",
              "218121                                 0                       0   \n",
              "237704                                 0                       0   \n",
              "62041                                  0                       0   \n",
              "\n",
              "        District_Name_AGAR MALWA  District_Name_AGRA  District_Name_AHMADABAD  \\\n",
              "188194                         0                   0                        0   \n",
              "159133                         0                   0                        0   \n",
              "86095                          0                   0                        0   \n",
              "163014                         0                   0                        0   \n",
              "182360                         0                   0                        0   \n",
              "...                          ...                 ...                      ...   \n",
              "181551                         0                   0                        0   \n",
              "222641                         0                   0                        0   \n",
              "218121                         0                   0                        0   \n",
              "237704                         0                   0                        0   \n",
              "62041                          0                   0                        0   \n",
              "\n",
              "        District_Name_AHMEDNAGAR  District_Name_AIZAWL  ...  Crop_Turmeric  \\\n",
              "188194                         0                     0  ...              0   \n",
              "159133                         0                     0  ...              0   \n",
              "86095                          0                     0  ...              0   \n",
              "163014                         0                     0  ...              0   \n",
              "182360                         0                     0  ...              0   \n",
              "...                          ...                   ...  ...            ...   \n",
              "181551                         0                     0  ...              0   \n",
              "222641                         0                     0  ...              0   \n",
              "218121                         0                     0  ...              0   \n",
              "237704                         0                     0  ...              0   \n",
              "62041                          0                     0  ...              0   \n",
              "\n",
              "        Crop_Turnip  Crop_Urad  Crop_Varagu  Crop_Water Melon  Crop_Wheat  \\\n",
              "188194            0          1            0                 0           0   \n",
              "159133            0          0            0                 0           0   \n",
              "86095             0          0            0                 0           0   \n",
              "163014            0          0            0                 0           1   \n",
              "182360            0          0            0                 0           0   \n",
              "...             ...        ...          ...               ...         ...   \n",
              "181551            0          0            0                 0           0   \n",
              "222641            0          1            0                 0           0   \n",
              "218121            0          0            0                 0           0   \n",
              "237704            0          0            0                 0           0   \n",
              "62041             0          0            0                 0           0   \n",
              "\n",
              "        Crop_Yam  Crop_other fibres  Crop_other misc. pulses  \\\n",
              "188194         0                  0                        0   \n",
              "159133         0                  0                        0   \n",
              "86095          0                  0                        0   \n",
              "163014         0                  0                        0   \n",
              "182360         0                  0                        0   \n",
              "...          ...                ...                      ...   \n",
              "181551         0                  0                        0   \n",
              "222641         0                  0                        0   \n",
              "218121         0                  0                        0   \n",
              "237704         0                  0                        0   \n",
              "62041          0                  0                        0   \n",
              "\n",
              "        Crop_other oilseeds  \n",
              "188194                    0  \n",
              "159133                    0  \n",
              "86095                     0  \n",
              "163014                    0  \n",
              "182360                    0  \n",
              "...                     ...  \n",
              "181551                    0  \n",
              "222641                    0  \n",
              "218121                    0  \n",
              "237704                    0  \n",
              "62041                     0  \n",
              "\n",
              "[60591 rows x 778 columns]"
            ]
          },
          "execution_count": 23,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "x_test"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "8c3df560",
      "metadata": {
        "id": "8c3df560",
        "outputId": "af6d4d1d-522c-4865-8aff-8f4d166953a8"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "188194       4760.0\n",
              "159133        780.0\n",
              "86095        3383.0\n",
              "163014    1242000.0\n",
              "182360        131.0\n",
              "            ...    \n",
              "181551        155.0\n",
              "222641        335.0\n",
              "218121        259.0\n",
              "237704      11285.0\n",
              "62041         100.0\n",
              "Name: Production, Length: 60591, dtype: float64"
            ]
          },
          "execution_count": 24,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "y_test"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "17fc1795",
      "metadata": {
        "id": "17fc1795",
        "outputId": "805929de-5efe-4bd5-9a18-0654fa432315"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "        Crop_Year    Area  District_Name_24 PARAGANAS NORTH  \\\n",
            "201072       2013    16.0                                 0   \n",
            "191897       1998  5400.0                                 0   \n",
            "43814        2000  2968.0                                 0   \n",
            "32815        2013   211.0                                 0   \n",
            "62249        2006  1700.0                                 0   \n",
            "...           ...     ...                               ...   \n",
            "236131       2000   207.0                                 0   \n",
            "127145       2007    39.0                                 0   \n",
            "20536        2005    43.0                                 0   \n",
            "18709        2011  2489.0                                 0   \n",
            "35767        1999    67.0                                 0   \n",
            "\n",
            "        District_Name_24 PARAGANAS SOUTH  District_Name_ADILABAD  \\\n",
            "201072                                 0                       0   \n",
            "191897                                 0                       0   \n",
            "43814                                  0                       0   \n",
            "32815                                  0                       0   \n",
            "62249                                  0                       0   \n",
            "...                                  ...                     ...   \n",
            "236131                                 0                       0   \n",
            "127145                                 0                       0   \n",
            "20536                                  0                       0   \n",
            "18709                                  0                       0   \n",
            "35767                                  0                       0   \n",
            "\n",
            "        District_Name_AGAR MALWA  District_Name_AGRA  District_Name_AHMADABAD  \\\n",
            "201072                         0                   0                        0   \n",
            "191897                         0                   0                        0   \n",
            "43814                          0                   0                        0   \n",
            "32815                          0                   0                        0   \n",
            "62249                          0                   0                        0   \n",
            "...                          ...                 ...                      ...   \n",
            "236131                         0                   0                        0   \n",
            "127145                         0                   0                        0   \n",
            "20536                          0                   0                        0   \n",
            "18709                          0                   0                        0   \n",
            "35767                          0                   0                        0   \n",
            "\n",
            "        District_Name_AHMEDNAGAR  District_Name_AIZAWL  ...  Crop_Turmeric  \\\n",
            "201072                         0                     0  ...              0   \n",
            "191897                         0                     0  ...              0   \n",
            "43814                          0                     0  ...              0   \n",
            "32815                          0                     0  ...              0   \n",
            "62249                          0                     0  ...              0   \n",
            "...                          ...                   ...  ...            ...   \n",
            "236131                         0                     0  ...              0   \n",
            "127145                         0                     0  ...              0   \n",
            "20536                          0                     0  ...              0   \n",
            "18709                          0                     0  ...              0   \n",
            "35767                          0                     0  ...              0   \n",
            "\n",
            "        Crop_Turnip  Crop_Urad  Crop_Varagu  Crop_Water Melon  Crop_Wheat  \\\n",
            "201072            0          0            0                 0           0   \n",
            "191897            0          0            0                 0           0   \n",
            "43814             0          0            0                 0           0   \n",
            "32815             0          0            0                 0           0   \n",
            "62249             0          0            0                 0           0   \n",
            "...             ...        ...          ...               ...         ...   \n",
            "236131            0          0            0                 0           0   \n",
            "127145            0          0            0                 0           0   \n",
            "20536             0          0            0                 0           0   \n",
            "18709             0          0            0                 0           0   \n",
            "35767             0          0            0                 0           0   \n",
            "\n",
            "        Crop_Yam  Crop_other fibres  Crop_other misc. pulses  \\\n",
            "201072         0                  0                        0   \n",
            "191897         0                  0                        0   \n",
            "43814          0                  0                        0   \n",
            "32815          0                  0                        0   \n",
            "62249          0                  0                        0   \n",
            "...          ...                ...                      ...   \n",
            "236131         0                  0                        0   \n",
            "127145         0                  0                        0   \n",
            "20536          0                  0                        0   \n",
            "18709          0                  0                        0   \n",
            "35767          0                  0                        0   \n",
            "\n",
            "        Crop_other oilseeds  \n",
            "201072                    0  \n",
            "191897                    0  \n",
            "43814                     0  \n",
            "32815                     0  \n",
            "62249                     0  \n",
            "...                     ...  \n",
            "236131                    0  \n",
            "127145                    0  \n",
            "20536                     0  \n",
            "18709                     0  \n",
            "35767                     0  \n",
            "\n",
            "[181770 rows x 778 columns]\n",
            "201072      11.0\n",
            "191897    2000.0\n",
            "43814     2555.0\n",
            "32815      175.0\n",
            "62249     1400.0\n",
            "           ...  \n",
            "236131     139.0\n",
            "127145      44.0\n",
            "20536       27.0\n",
            "18709     4779.0\n",
            "35767       81.0\n",
            "Name: Production, Length: 181770, dtype: float64\n"
          ]
        }
      ],
      "source": [
        "print(x_train)\n",
        "print(y_train)"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "4cd4ac3f",
      "metadata": {
        "id": "4cd4ac3f"
      },
      "source": [
        "# Linear Regression\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "59f01158",
      "metadata": {
        "id": "59f01158"
      },
      "outputs": [],
      "source": [
        "# Training the Simple Linear Regression model .\n",
        "\n",
        "from sklearn.linear_model import LinearRegression\n",
        "reg=LinearRegression()\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "dc5a9ba0",
      "metadata": {
        "id": "dc5a9ba0",
        "outputId": "27d24516-f682-47f7-9436-4abf9b059d25"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>"
            ],
            "text/plain": [
              "LinearRegression()"
            ]
          },
          "execution_count": 42,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "reg.fit(x_train,y_train)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "2bdb26a4",
      "metadata": {
        "id": "2bdb26a4",
        "outputId": "19fe5f29-9abb-41db-eb53-ee30c787f869"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "-32141084533974.88"
            ]
          },
          "execution_count": 43,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "reg.intercept_"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "92ee294b",
      "metadata": {
        "id": "92ee294b",
        "outputId": "f8b0e65c-b2f3-4b7f-ca07-208f618728c0"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "array([ 2.56017781e+04,  1.54986039e+01,  4.93466553e+11,  4.93466620e+11,\n",
              "        4.93467901e+11,  4.93467718e+11,  4.93467725e+11,  4.93467796e+11,\n",
              "        4.93467522e+11,  4.93467694e+11,  4.93467887e+11,  4.93467547e+11,\n",
              "        4.93484681e+11,  4.93467707e+11,  4.93467867e+11,  4.93467614e+11,\n",
              "        4.93467914e+11,  4.93467742e+11,  4.93468031e+11,  4.93467750e+11,\n",
              "        4.93467515e+11,  4.93467496e+11,  4.93467635e+11,  4.93467558e+11,\n",
              "        4.93467937e+11,  4.93467922e+11,  4.93466577e+11,  4.93467855e+11,\n",
              "        4.93468472e+11,  4.93468337e+11,  4.93467942e+11,  4.93468066e+11,\n",
              "        4.93465660e+11,  4.93467954e+11,  4.93467833e+11,  4.93467723e+11,\n",
              "        4.93467715e+11,  4.93467654e+11,  4.93467945e+11,  4.93466598e+11,\n",
              "        4.93467981e+11,  4.93468061e+11,  4.93467759e+11,  4.93467646e+11,\n",
              "        4.93467873e+11,  4.93468314e+11,  4.93468155e+11,  4.93467704e+11,\n",
              "        4.93467703e+11,  4.93467827e+11,  4.93467789e+11,  4.93467532e+11,\n",
              "        4.93467652e+11,  4.93467709e+11,  4.93466734e+11,  4.93467946e+11,\n",
              "        4.93466740e+11,  4.93467901e+11,  4.93467718e+11,  4.93468072e+11,\n",
              "        4.93467954e+11,  4.93466201e+11,  4.93467844e+11,  4.93468271e+11,\n",
              "        4.93466760e+11,  4.93467617e+11,  4.93467151e+11,  4.93468080e+11,\n",
              "        4.93467912e+11,  4.93467771e+11,  4.93467615e+11,  4.93467576e+11,\n",
              "        4.93468012e+11,  4.93466905e+11,  4.93466630e+11,  4.93467777e+11,\n",
              "        4.93466269e+11,  4.93467849e+11,  4.93468159e+11,  4.93468086e+11,\n",
              "        4.93467921e+11,  4.93467890e+11,  4.93467985e+11,  4.93467731e+11,\n",
              "        4.93467932e+11,  4.93467885e+11,  4.93467535e+11,  4.93467978e+11,\n",
              "        4.93467971e+11,  4.93466327e+11,  4.93466497e+11,  4.93468220e+11,\n",
              "        4.93467446e+11,  4.93467884e+11,  4.93466632e+11,  4.93468780e+11,\n",
              "        4.93468696e+11,  4.93466576e+11,  4.93468423e+11,  4.93467732e+11,\n",
              "        4.93467800e+11,  4.93467463e+11,  4.93467982e+11,  4.93468112e+11,\n",
              "        4.93467935e+11,  4.93466949e+11,  4.93467090e+11,  4.93467873e+11,\n",
              "        4.93467987e+11,  4.93467982e+11,  4.93468221e+11,  4.93467742e+11,\n",
              "        4.93468783e+11,  4.93468200e+11,  4.93467726e+11,  4.93468617e+11,\n",
              "        4.93468366e+11,  4.93467938e+11,  4.93467842e+11,  4.93466301e+11,\n",
              "        4.93466781e+11,  4.93467225e+11,  4.93466731e+11,  4.93467784e+11,\n",
              "        4.93467313e+11,  4.93467903e+11,  4.93468939e+11,  4.93467001e+11,\n",
              "        4.93473661e+11,  4.93466567e+11,  4.93467171e+11,  4.93468298e+11,\n",
              "        4.93466318e+11,  4.93466064e+11,  4.93467997e+11,  4.93468050e+11,\n",
              "        4.93467957e+11,  4.93468082e+11,  4.93467087e+11,  4.93466787e+11,\n",
              "        4.93468024e+11,  4.93467847e+11,  4.93466718e+11,  4.93468008e+11,\n",
              "        4.93468399e+11,  4.93468426e+11,  4.93467788e+11,  4.93467795e+11,\n",
              "        4.93467914e+11,  4.93467889e+11,  4.93468357e+11,  4.93467824e+11,\n",
              "        4.93467839e+11,  4.93466549e+11,  4.93466452e+11,  4.93468405e+11,\n",
              "        4.93468019e+11,  4.93466612e+11,  4.93467764e+11,  4.93468706e+11,\n",
              "        4.93466666e+11,  4.93466396e+11,  4.93467906e+11,  4.93466090e+11,\n",
              "        4.93466313e+11,  4.93469791e+11,  4.93467902e+11,  4.93468049e+11,\n",
              "        4.93467702e+11,  4.93468441e+11,  4.93467977e+11,  4.93467730e+11,\n",
              "        4.93468135e+11,  4.93468628e+11,  4.93478373e+11,  4.93468906e+11,\n",
              "        4.93468677e+11,  4.93468876e+11,  4.93468527e+11,  4.93468223e+11,\n",
              "        4.93479854e+11,  4.93468090e+11,  4.93467748e+11,  4.93467721e+11,\n",
              "        4.93467751e+11,  4.93467984e+11,  4.93467760e+11,  4.93467812e+11,\n",
              "        4.93467825e+11,  4.93467787e+11,  4.93467729e+11,  4.93467457e+11,\n",
              "        4.93467781e+11,  4.93467294e+11,  4.93466280e+11,  4.93467956e+11,\n",
              "        4.93468428e+11,  4.93467743e+11,  4.93468047e+11,  4.93467594e+11,\n",
              "        4.93468249e+11,  4.93468303e+11,  4.93467711e+11,  4.93467858e+11,\n",
              "        4.93468017e+11,  4.93467989e+11,  4.93467674e+11,  4.93468505e+11,\n",
              "        4.93466732e+11,  4.93468295e+11,  4.93466655e+11,  4.93467638e+11,\n",
              "        4.93467786e+11,  4.93467745e+11,  4.93468077e+11,  4.93467763e+11,\n",
              "        4.93466576e+11,  4.93468241e+11,  4.93467863e+11,  4.93466834e+11,\n",
              "        4.93467684e+11,  4.93468015e+11,  4.93468039e+11,  4.93466405e+11,\n",
              "        4.93467761e+11,  4.93467573e+11,  4.93467667e+11,  4.93468023e+11,\n",
              "        4.93467651e+11,  4.93468122e+11,  4.93466835e+11,  4.93467771e+11,\n",
              "        4.93466407e+11,  4.93468224e+11,  4.93467663e+11,  4.93467704e+11,\n",
              "        4.93466271e+11,  4.93467939e+11,  4.93467800e+11,  4.93466565e+11,\n",
              "        4.93468840e+11,  4.93471583e+11,  4.93469162e+11,  4.93468732e+11,\n",
              "        4.93467894e+11,  4.93467936e+11,  4.93468291e+11,  4.93467577e+11,\n",
              "        4.93467634e+11,  4.93468304e+11,  4.93467662e+11,  4.93467680e+11,\n",
              "        4.93467432e+11,  4.93467495e+11,  4.93467720e+11,  4.93466505e+11,\n",
              "        4.93467920e+11,  4.93467598e+11,  4.93468334e+11,  4.93467886e+11,\n",
              "        4.93467858e+11,  4.93467907e+11,  4.93467639e+11,  4.93467972e+11,\n",
              "        4.93468022e+11,  4.93467846e+11,  4.93467912e+11,  4.93467660e+11,\n",
              "        4.93468477e+11,  4.93467707e+11,  4.93467716e+11,  4.93467342e+11,\n",
              "        4.93466555e+11,  4.93467616e+11,  4.93467866e+11,  4.93467713e+11,\n",
              "        4.93466860e+11,  4.93467989e+11,  4.93467878e+11,  4.93468279e+11,\n",
              "        4.93466880e+11,  4.93466916e+11,  4.93467115e+11,  4.93468497e+11,\n",
              "        4.93467858e+11,  4.93467902e+11,  4.93467742e+11,  4.93468699e+11,\n",
              "        4.93502947e+11,  4.93467670e+11,  4.93467710e+11,  4.93467822e+11,\n",
              "        4.93465121e+11,  4.93467955e+11,  4.93466850e+11,  4.93468081e+11,\n",
              "        4.93466612e+11,  4.93467838e+11,  4.93467816e+11,  4.93467544e+11,\n",
              "        4.93493679e+11,  4.93467510e+11,  4.93467965e+11,  4.93468045e+11,\n",
              "        4.93468027e+11,  4.93467776e+11,  4.93468199e+11,  4.93468276e+11,\n",
              "        4.93468034e+11,  4.93466804e+11,  4.93467970e+11,  4.93467953e+11,\n",
              "        4.93467889e+11,  4.93468048e+11,  4.93468270e+11,  4.93467656e+11,\n",
              "        4.93467613e+11,  4.93468224e+11,  4.93467852e+11,  4.93468103e+11,\n",
              "        4.93467729e+11,  4.93466091e+11,  4.93468330e+11,  4.93468065e+11,\n",
              "        4.93466672e+11,  4.93466216e+11,  4.93468189e+11,  4.93468163e+11,\n",
              "        4.93482149e+11,  4.93467804e+11,  4.93465980e+11,  4.93468325e+11,\n",
              "        4.93467947e+11,  4.93468002e+11,  4.93467902e+11,  4.93475968e+11,\n",
              "        4.93523100e+11,  4.93467250e+11,  4.93469266e+11,  4.93467658e+11,\n",
              "        4.93467897e+11,  4.93468401e+11,  4.93466885e+11,  4.93468007e+11,\n",
              "        4.93468710e+11,  4.93467856e+11,  4.93467910e+11,  4.93466429e+11,\n",
              "        4.93467981e+11,  4.93467704e+11,  4.93468248e+11,  4.93467611e+11,\n",
              "        4.93467932e+11,  4.93468072e+11,  4.93468332e+11,  4.93468628e+11,\n",
              "        4.93468590e+11,  4.93467874e+11,  4.93468564e+11,  4.93468536e+11,\n",
              "        4.93467808e+11,  4.93467500e+11,  4.93467711e+11,  4.93468061e+11,\n",
              "        4.93467986e+11,  4.93468372e+11,  4.93467766e+11,  4.93467853e+11,\n",
              "        4.93467320e+11,  4.93462171e+11,  4.93467744e+11,  4.93467815e+11,\n",
              "        4.93467694e+11,  4.93467736e+11,  4.93516741e+11,  4.93466701e+11,\n",
              "        4.93468408e+11,  4.93468131e+11,  4.93467920e+11,  4.93467965e+11,\n",
              "        4.93467866e+11,  4.93466672e+11,  4.93467661e+11,  4.93466700e+11,\n",
              "        4.93467742e+11,  4.93467791e+11,  4.93468248e+11,  4.93467315e+11,\n",
              "        4.93465969e+11,  4.93466813e+11,  4.93468157e+11,  4.93467783e+11,\n",
              "        4.93467764e+11,  4.93467661e+11,  4.93468027e+11,  4.93467927e+11,\n",
              "        4.93467881e+11,  4.93467917e+11,  4.93467624e+11,  4.93468811e+11,\n",
              "        4.93467680e+11,  4.93468056e+11,  4.93466559e+11,  4.93468263e+11,\n",
              "        4.93468025e+11,  4.93467040e+11,  4.93468247e+11,  4.93466166e+11,\n",
              "        4.93467339e+11,  4.93466866e+11,  4.93467400e+11,  4.93467644e+11,\n",
              "        4.93468003e+11,  4.93467874e+11,  4.93466845e+11,  4.93467075e+11,\n",
              "        4.93468496e+11,  4.93467807e+11,  4.93467542e+11,  4.93467787e+11,\n",
              "        4.93467987e+11,  4.93467950e+11,  4.93467956e+11,  4.93467638e+11,\n",
              "        4.93468056e+11,  4.93467997e+11,  4.93467717e+11,  4.93468385e+11,\n",
              "        4.93468066e+11,  4.93469577e+11,  4.93467387e+11,  4.93465705e+11,\n",
              "        4.93468135e+11,  4.93468485e+11,  4.93466552e+11,  4.93467810e+11,\n",
              "        4.93468377e+11,  4.93467523e+11,  4.93468274e+11,  4.93484706e+11,\n",
              "        4.93468265e+11,  4.93467459e+11,  4.93467821e+11,  4.93467683e+11,\n",
              "        4.93467878e+11,  4.93468098e+11,  4.93468074e+11,  4.93467954e+11,\n",
              "        4.93468520e+11,  4.93467522e+11,  4.93468059e+11,  4.93467683e+11,\n",
              "        4.93473324e+11,  4.93467666e+11,  4.93467508e+11,  4.93467974e+11,\n",
              "        4.93467955e+11,  4.93467828e+11,  4.93467930e+11,  4.93467943e+11,\n",
              "        4.93467909e+11,  4.93468031e+11,  4.93466675e+11,  4.93467925e+11,\n",
              "        4.93467857e+11,  4.93467183e+11,  4.93467713e+11,  4.93467673e+11,\n",
              "        4.93467969e+11,  4.93467806e+11,  4.93467992e+11,  4.93468297e+11,\n",
              "        4.93468016e+11,  4.93466718e+11,  4.93467748e+11,  4.93466237e+11,\n",
              "        4.93467822e+11,  4.93467879e+11,  4.93467790e+11,  4.93467829e+11,\n",
              "        4.93468085e+11,  4.93467870e+11,  4.93467457e+11,  4.93467854e+11,\n",
              "        4.93468075e+11,  4.93466404e+11,  4.93467256e+11,  4.93468012e+11,\n",
              "        4.93467640e+11,  4.93467844e+11,  4.93468091e+11,  4.93466584e+11,\n",
              "        4.93467943e+11,  4.93467921e+11,  4.93468401e+11,  4.93467750e+11,\n",
              "        4.93467943e+11,  4.93467977e+11,  4.93468913e+11,  4.93468018e+11,\n",
              "        4.93467936e+11,  4.93467941e+11,  4.93467886e+11,  4.93467828e+11,\n",
              "        4.93467731e+11,  4.93467766e+11,  4.93468085e+11,  4.93468039e+11,\n",
              "        4.93468326e+11,  4.93467932e+11,  4.93468130e+11,  4.93468091e+11,\n",
              "        4.93467768e+11,  4.93468383e+11,  4.93467513e+11,  4.93467755e+11,\n",
              "        4.93467489e+11,  4.93467832e+11,  4.93467812e+11,  4.93468434e+11,\n",
              "        4.93467988e+11,  4.93467794e+11,  4.93467894e+11,  4.93467983e+11,\n",
              "        4.93467873e+11,  4.93468813e+11,  4.93467915e+11,  4.93467707e+11,\n",
              "        4.93468126e+11,  4.93468032e+11,  4.93467712e+11,  4.93467855e+11,\n",
              "        4.93467861e+11,  4.93468026e+11,  4.93468148e+11,  4.93467919e+11,\n",
              "        4.93467921e+11,  4.93467250e+11,  4.93467889e+11,  4.93467030e+11,\n",
              "        4.93467798e+11,  4.93467663e+11,  4.93467951e+11,  4.93467756e+11,\n",
              "        4.93468253e+11,  4.93467982e+11,  4.93467962e+11,  4.93467930e+11,\n",
              "        4.93468018e+11,  4.93467664e+11,  4.93468092e+11,  4.93467797e+11,\n",
              "        4.93467582e+11,  4.93466546e+11,  4.93468052e+11,  4.93467948e+11,\n",
              "        4.93467581e+11,  4.93467735e+11,  4.93468417e+11,  4.93468007e+11,\n",
              "        4.93466632e+11,  4.93467345e+11,  4.93468203e+11,  4.93468686e+11,\n",
              "        4.93467388e+11,  4.93467798e+11,  4.93468498e+11,  4.93468848e+11,\n",
              "        4.93467206e+11,  4.93470304e+11,  4.93468021e+11,  4.93467820e+11,\n",
              "        4.93467718e+11,  4.93468270e+11,  4.93468027e+11,  4.93467767e+11,\n",
              "        4.93468260e+11,  4.93467611e+11,  4.93467895e+11,  4.93468883e+11,\n",
              "        4.93467968e+11,  4.93467500e+11,  4.93468634e+11,  4.93467924e+11,\n",
              "        4.93467876e+11,  4.93470071e+11,  4.93468182e+11,  4.93469257e+11,\n",
              "        4.93466928e+11,  4.93508067e+11,  4.93466576e+11,  4.93468852e+11,\n",
              "        4.93501770e+11,  4.93468008e+11,  4.93466951e+11,  4.93468632e+11,\n",
              "        4.93467790e+11,  4.93467609e+11,  4.93477870e+11,  4.93467470e+11,\n",
              "        4.93467873e+11,  4.93467991e+11,  4.93467369e+11,  4.93467487e+11,\n",
              "        4.93468018e+11,  4.93466898e+11,  4.93467986e+11,  4.93467999e+11,\n",
              "        4.93466442e+11,  4.93467778e+11,  4.93468911e+11,  4.93468091e+11,\n",
              "        4.93467906e+11,  4.93467677e+11,  4.93467709e+11,  4.93468608e+11,\n",
              "        4.93468658e+11,  4.93466802e+11,  4.93467967e+11,  4.93467859e+11,\n",
              "        4.93468027e+11,  4.93468154e+11,  4.93467729e+11,  4.93468306e+11,\n",
              "        4.93467752e+11,  4.93467654e+11,  4.93467676e+11,  4.93468299e+11,\n",
              "        4.93467552e+11,  4.93467821e+11,  4.93467674e+11,  4.93467591e+11,\n",
              "        4.93469051e+11,  4.93468157e+11,  4.93468603e+11,  4.93475300e+11,\n",
              "        4.93468846e+11,  4.93468715e+11,  4.93468712e+11,  4.93468546e+11,\n",
              "        4.93468178e+11,  4.93467830e+11,  4.93467978e+11,  4.93465680e+11,\n",
              "        4.93468089e+11,  4.93461910e+11,  4.93467348e+11,  4.93468003e+11,\n",
              "        3.38310536e+13,  3.38310543e+13,  3.38310544e+13,  3.38310544e+13,\n",
              "        3.38310536e+13,  3.38310531e+13, -2.18349104e+12, -2.18348717e+12,\n",
              "       -2.18349125e+12, -2.18348900e+12, -2.18348839e+12, -2.18348692e+12,\n",
              "       -2.18348928e+12, -2.18348988e+12, -2.18348902e+12, -2.18348928e+12,\n",
              "       -2.18348843e+12, -2.18348945e+12, -2.18348812e+12, -2.18349083e+12,\n",
              "       -2.18349602e+12, -2.18349451e+12, -2.18348891e+12, -2.18348868e+12,\n",
              "       -2.18349039e+12, -2.18348938e+12, -2.18349332e+12, -2.18348907e+12,\n",
              "       -2.18349401e+12, -2.18348700e+12, -2.18349339e+12, -2.18348879e+12,\n",
              "       -2.18348847e+12, -2.18348817e+12, -2.18342423e+12, -2.18349399e+12,\n",
              "       -2.18348928e+12, -2.18348897e+12, -2.18348833e+12, -2.18348925e+12,\n",
              "       -2.18348863e+12, -2.18348845e+12, -2.18350018e+12, -2.18348844e+12,\n",
              "       -2.18349041e+12, -2.18348838e+12, -2.18348865e+12, -2.18348909e+12,\n",
              "       -2.18348802e+12, -2.18348901e+12, -2.18348890e+12, -2.18348876e+12,\n",
              "       -2.18349275e+12, -2.18348928e+12, -2.18348925e+12, -2.18348847e+12,\n",
              "       -2.18348865e+12, -2.18348877e+12, -2.18348895e+12, -2.18348930e+12,\n",
              "       -2.18348867e+12, -2.18349091e+12, -2.18348920e+12, -2.18348880e+12,\n",
              "       -2.18348870e+12, -2.18348898e+12, -2.18349109e+12, -2.18348896e+12,\n",
              "       -2.18348863e+12, -2.18348891e+12, -2.18348910e+12, -2.18348854e+12,\n",
              "       -2.18349056e+12, -2.18348844e+12, -2.18348815e+12, -2.18348887e+12,\n",
              "       -2.18348953e+12, -2.18348857e+12, -3.72529030e-09, -2.18349023e+12,\n",
              "       -2.18348891e+12, -2.18349022e+12, -2.18348822e+12, -2.18349038e+12,\n",
              "       -2.18348766e+12, -2.18348940e+12, -2.18348748e+12, -2.18348889e+12,\n",
              "       -2.18348934e+12, -2.18349223e+12, -2.18348962e+12, -2.18348817e+12,\n",
              "       -2.18348889e+12, -2.18348845e+12, -2.18348969e+12, -2.18348847e+12,\n",
              "       -2.18348901e+12, -2.18348931e+12, -2.18348900e+12, -2.18348864e+12,\n",
              "       -2.18348851e+12, -2.18349027e+12, -2.18348956e+12, -2.18351137e+12,\n",
              "       -2.18348865e+12, -2.18348989e+12, -2.18348846e+12, -2.18349058e+12,\n",
              "       -2.18348913e+12, -2.18348898e+12, -2.18349603e+12, -2.18348959e+12,\n",
              "       -2.18348812e+12, -2.18348878e+12, -2.18348958e+12, -2.18349176e+12,\n",
              "       -2.18349343e+12, -2.18348853e+12, -2.18348869e+12, -2.18349075e+12,\n",
              "       -2.18348960e+12, -2.18348866e+12, -2.18348893e+12, -2.18348905e+12,\n",
              "       -2.18348838e+12, -2.18348966e+12, -2.18348849e+12, -2.18348810e+12,\n",
              "       -2.18348873e+12, -2.18348959e+12])"
            ]
          },
          "execution_count": 44,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "reg.coef_"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "1d8ef5dc",
      "metadata": {
        "id": "1d8ef5dc"
      },
      "outputs": [],
      "source": [
        "pred_1=reg.predict(x_test)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "28086502",
      "metadata": {
        "id": "28086502",
        "outputId": "b4b3d960-4e67-4d22-d253-11160e710df7"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "array([ -130005.640625  ,   481454.78515625, -1269558.7265625 , ...,\n",
              "         140900.76171875, -1739975.5234375 ,   246194.3828125 ])"
            ]
          },
          "execution_count": 46,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "pred_1"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "3402011c",
      "metadata": {
        "id": "3402011c"
      },
      "outputs": [],
      "source": [
        "from sklearn.metrics import mean_absolute_error, mean_squared_error\n",
        "from sklearn.metrics import r2_score"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "ec31d241",
      "metadata": {
        "id": "ec31d241"
      },
      "outputs": [],
      "source": [
        "mae=mean_absolute_error(y_test,pred_1)\n",
        "mse=mean_squared_error(y_test,pred_1)\n",
        "score=r2_score(y_test,pred_1)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "df260fce",
      "metadata": {
        "id": "df260fce",
        "outputId": "35f38d44-a22e-4331-a445-b46554cb6c57"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "37969481.58157005"
            ]
          },
          "execution_count": 50,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "mae"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "bffb675f",
      "metadata": {
        "id": "bffb675f",
        "outputId": "9dc68c3b-537e-4d26-e372-efbfb34e0715"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "7.868544112371206e+19"
            ]
          },
          "execution_count": 51,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "mse"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "8a40a7d5",
      "metadata": {
        "id": "8a40a7d5",
        "outputId": "c7375158-ebbf-4399-990f-b29792e4d6e2"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "-273564.23870016995"
            ]
          },
          "execution_count": 52,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "score"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "195a41ec",
      "metadata": {
        "id": "195a41ec"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "1656f663",
      "metadata": {
        "id": "1656f663"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "94d48800",
      "metadata": {
        "id": "94d48800"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "7b42db95",
      "metadata": {
        "id": "7b42db95"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "72849957",
      "metadata": {
        "id": "72849957",
        "outputId": "ba5e7c72-a228-4b6b-9781-33b37eacf7c7"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "Text(0.5, 1.0, 'Linear Regression')"
            ]
          },
          "execution_count": 31,
          "metadata": {},
          "output_type": "execute_result"
        },
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "plt.scatter(y_test,lr_predict)\n",
        "plt.xlabel('Actual')\n",
        "plt.ylabel('Predicted')\n",
        "plt.title('Linear Regression')"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "0049a2e3",
      "metadata": {
        "id": "0049a2e3"
      },
      "source": [
        "Clearly, the dataset is not good for linear regression.\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "ceaea782",
      "metadata": {
        "id": "ceaea782"
      },
      "source": [
        "Assumptions of Linear Regression\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "bef8ba02",
      "metadata": {
        "id": "bef8ba02"
      },
      "source": [
        "1.Linearity.\n",
        "2.Multivariate normality\n",
        "3.Lack of multicollinearity"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "37e09d39",
      "metadata": {
        "id": "37e09d39"
      },
      "source": [
        "# Random Forest Algorithm\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "94468b7a",
      "metadata": {
        "id": "94468b7a"
      },
      "outputs": [],
      "source": [
        "from sklearn.ensemble import RandomForestClassifier"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "068c77c5",
      "metadata": {
        "id": "068c77c5"
      },
      "outputs": [],
      "source": [
        "from sklearn.model_selection import train_test_split"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "9adb95ad",
      "metadata": {
        "id": "9adb95ad"
      },
      "outputs": [],
      "source": [
        "model=RandomForestClassifier()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "bf1a25de",
      "metadata": {
        "id": "bf1a25de",
        "outputId": "31f53d6b-87fa-49d4-805f-ebccfd4b02f9"
      },
      "outputs": [
        {
          "ename": "ValueError",
          "evalue": "Unknown label type: 'continuous'",
          "output_type": "error",
          "traceback": [
            "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[1;31mValueError\u001b[0m                                Traceback (most recent call last)",
            "Cell \u001b[1;32mIn[56], line 1\u001b[0m\n\u001b[1;32m----> 1\u001b[0m \u001b[43mmodel\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mfit\u001b[49m\u001b[43m(\u001b[49m\u001b[43mx_train\u001b[49m\u001b[43m,\u001b[49m\u001b[43my_train\u001b[49m\u001b[43m)\u001b[49m\n",
            "File \u001b[1;32m~\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sklearn\\ensemble\\_forest.py:385\u001b[0m, in \u001b[0;36mBaseForest.fit\u001b[1;34m(self, X, y, sample_weight)\u001b[0m\n\u001b[0;32m    378\u001b[0m         \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\n\u001b[0;32m    379\u001b[0m             \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mSum of y is not strictly positive which \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    380\u001b[0m             \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mis necessary for Poisson regression.\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    381\u001b[0m         )\n\u001b[0;32m    383\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mn_outputs_ \u001b[38;5;241m=\u001b[39m y\u001b[38;5;241m.\u001b[39mshape[\u001b[38;5;241m1\u001b[39m]\n\u001b[1;32m--> 385\u001b[0m y, expanded_class_weight \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_validate_y_class_weight\u001b[49m\u001b[43m(\u001b[49m\u001b[43my\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m    387\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mgetattr\u001b[39m(y, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mdtype\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m) \u001b[38;5;241m!=\u001b[39m DOUBLE \u001b[38;5;129;01mor\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m y\u001b[38;5;241m.\u001b[39mflags\u001b[38;5;241m.\u001b[39mcontiguous:\n\u001b[0;32m    388\u001b[0m     y \u001b[38;5;241m=\u001b[39m np\u001b[38;5;241m.\u001b[39mascontiguousarray(y, dtype\u001b[38;5;241m=\u001b[39mDOUBLE)\n",
            "File \u001b[1;32m~\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sklearn\\ensemble\\_forest.py:746\u001b[0m, in \u001b[0;36mForestClassifier._validate_y_class_weight\u001b[1;34m(self, y)\u001b[0m\n\u001b[0;32m    745\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21m_validate_y_class_weight\u001b[39m(\u001b[38;5;28mself\u001b[39m, y):\n\u001b[1;32m--> 746\u001b[0m     \u001b[43mcheck_classification_targets\u001b[49m\u001b[43m(\u001b[49m\u001b[43my\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m    748\u001b[0m     y \u001b[38;5;241m=\u001b[39m np\u001b[38;5;241m.\u001b[39mcopy(y)\n\u001b[0;32m    749\u001b[0m     expanded_class_weight \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m\n",
            "File \u001b[1;32m~\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sklearn\\utils\\multiclass.py:218\u001b[0m, in \u001b[0;36mcheck_classification_targets\u001b[1;34m(y)\u001b[0m\n\u001b[0;32m    210\u001b[0m y_type \u001b[38;5;241m=\u001b[39m type_of_target(y, input_name\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124my\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[0;32m    211\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m y_type \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m [\n\u001b[0;32m    212\u001b[0m     \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mbinary\u001b[39m\u001b[38;5;124m\"\u001b[39m,\n\u001b[0;32m    213\u001b[0m     \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mmulticlass\u001b[39m\u001b[38;5;124m\"\u001b[39m,\n\u001b[1;32m   (...)\u001b[0m\n\u001b[0;32m    216\u001b[0m     \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mmultilabel-sequences\u001b[39m\u001b[38;5;124m\"\u001b[39m,\n\u001b[0;32m    217\u001b[0m ]:\n\u001b[1;32m--> 218\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mUnknown label type: \u001b[39m\u001b[38;5;132;01m%r\u001b[39;00m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;241m%\u001b[39m y_type)\n",
            "\u001b[1;31mValueError\u001b[0m: Unknown label type: 'continuous'"
          ]
        }
      ],
      "source": [
        "model.fit(x_train,y_train)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "724aa1e7",
      "metadata": {
        "id": "724aa1e7"
      },
      "outputs": [],
      "source": [
        "lr_predict=model.predict(x_test)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "c7648342",
      "metadata": {
        "id": "c7648342"
      },
      "outputs": [],
      "source": [
        "from sklearn.metrics import confusion_matrix\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "235d77ba",
      "metadata": {
        "id": "235d77ba",
        "outputId": "cbdd3a20-5346-4478-83dc-2f241600b608"
      },
      "outputs": [
        {
          "ename": "ValueError",
          "evalue": "continuous is not supported",
          "output_type": "error",
          "traceback": [
            "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[1;31mValueError\u001b[0m                                Traceback (most recent call last)",
            "Cell \u001b[1;32mIn[58], line 1\u001b[0m\n\u001b[1;32m----> 1\u001b[0m c\u001b[38;5;241m=\u001b[39m\u001b[43mconfusion_matrix\u001b[49m\u001b[43m(\u001b[49m\u001b[43my_test\u001b[49m\u001b[43m,\u001b[49m\u001b[43mlr_predict\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m      2\u001b[0m c\n",
            "File \u001b[1;32m~\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sklearn\\metrics\\_classification.py:317\u001b[0m, in \u001b[0;36mconfusion_matrix\u001b[1;34m(y_true, y_pred, labels, sample_weight, normalize)\u001b[0m\n\u001b[0;32m    232\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mconfusion_matrix\u001b[39m(\n\u001b[0;32m    233\u001b[0m     y_true, y_pred, \u001b[38;5;241m*\u001b[39m, labels\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m, sample_weight\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m, normalize\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[0;32m    234\u001b[0m ):\n\u001b[0;32m    235\u001b[0m \u001b[38;5;250m    \u001b[39m\u001b[38;5;124;03m\"\"\"Compute confusion matrix to evaluate the accuracy of a classification.\u001b[39;00m\n\u001b[0;32m    236\u001b[0m \n\u001b[0;32m    237\u001b[0m \u001b[38;5;124;03m    By definition a confusion matrix :math:`C` is such that :math:`C_{i, j}`\u001b[39;00m\n\u001b[1;32m   (...)\u001b[0m\n\u001b[0;32m    315\u001b[0m \u001b[38;5;124;03m    (0, 2, 1, 1)\u001b[39;00m\n\u001b[0;32m    316\u001b[0m \u001b[38;5;124;03m    \"\"\"\u001b[39;00m\n\u001b[1;32m--> 317\u001b[0m     y_type, y_true, y_pred \u001b[38;5;241m=\u001b[39m \u001b[43m_check_targets\u001b[49m\u001b[43m(\u001b[49m\u001b[43my_true\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43my_pred\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m    318\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m y_type \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m (\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mbinary\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mmulticlass\u001b[39m\u001b[38;5;124m\"\u001b[39m):\n\u001b[0;32m    319\u001b[0m         \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;132;01m%s\u001b[39;00m\u001b[38;5;124m is not supported\u001b[39m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;241m%\u001b[39m y_type)\n",
            "File \u001b[1;32m~\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sklearn\\metrics\\_classification.py:106\u001b[0m, in \u001b[0;36m_check_targets\u001b[1;34m(y_true, y_pred)\u001b[0m\n\u001b[0;32m    104\u001b[0m \u001b[38;5;66;03m# No metrics support \"multiclass-multioutput\" format\u001b[39;00m\n\u001b[0;32m    105\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m y_type \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m [\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mbinary\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mmulticlass\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mmultilabel-indicator\u001b[39m\u001b[38;5;124m\"\u001b[39m]:\n\u001b[1;32m--> 106\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;132;01m{0}\u001b[39;00m\u001b[38;5;124m is not supported\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;241m.\u001b[39mformat(y_type))\n\u001b[0;32m    108\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m y_type \u001b[38;5;129;01min\u001b[39;00m [\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mbinary\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mmulticlass\u001b[39m\u001b[38;5;124m\"\u001b[39m]:\n\u001b[0;32m    109\u001b[0m     y_true \u001b[38;5;241m=\u001b[39m column_or_1d(y_true)\n",
            "\u001b[1;31mValueError\u001b[0m: continuous is not supported"
          ]
        }
      ],
      "source": [
        "c=confusion_matrix(y_test,lr_predict)\n",
        "c"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "5b161ccd",
      "metadata": {
        "id": "5b161ccd"
      },
      "outputs": [],
      "source": [
        "from sklearn import tree"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "daee82e3",
      "metadata": {
        "id": "daee82e3"
      },
      "outputs": [],
      "source": [
        "model=tree.DecisionTreeClassifier()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "8cd4c588",
      "metadata": {
        "id": "8cd4c588",
        "outputId": "5bb310b6-46c3-45ba-8f51-04ad843217b5"
      },
      "outputs": [
        {
          "ename": "ValueError",
          "evalue": "Unknown label type: 'continuous'",
          "output_type": "error",
          "traceback": [
            "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[1;31mValueError\u001b[0m                                Traceback (most recent call last)",
            "Cell \u001b[1;32mIn[62], line 1\u001b[0m\n\u001b[1;32m----> 1\u001b[0m \u001b[43mmodel\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mfit\u001b[49m\u001b[43m(\u001b[49m\u001b[43mx\u001b[49m\u001b[43m,\u001b[49m\u001b[43my\u001b[49m\u001b[43m)\u001b[49m\n",
            "File \u001b[1;32m~\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sklearn\\tree\\_classes.py:889\u001b[0m, in \u001b[0;36mDecisionTreeClassifier.fit\u001b[1;34m(self, X, y, sample_weight, check_input)\u001b[0m\n\u001b[0;32m    859\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mfit\u001b[39m(\u001b[38;5;28mself\u001b[39m, X, y, sample_weight\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m, check_input\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mTrue\u001b[39;00m):\n\u001b[0;32m    860\u001b[0m \u001b[38;5;250m    \u001b[39m\u001b[38;5;124;03m\"\"\"Build a decision tree classifier from the training set (X, y).\u001b[39;00m\n\u001b[0;32m    861\u001b[0m \n\u001b[0;32m    862\u001b[0m \u001b[38;5;124;03m    Parameters\u001b[39;00m\n\u001b[1;32m   (...)\u001b[0m\n\u001b[0;32m    886\u001b[0m \u001b[38;5;124;03m        Fitted estimator.\u001b[39;00m\n\u001b[0;32m    887\u001b[0m \u001b[38;5;124;03m    \"\"\"\u001b[39;00m\n\u001b[1;32m--> 889\u001b[0m     \u001b[38;5;28;43msuper\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mfit\u001b[49m\u001b[43m(\u001b[49m\n\u001b[0;32m    890\u001b[0m \u001b[43m        \u001b[49m\u001b[43mX\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m    891\u001b[0m \u001b[43m        \u001b[49m\u001b[43my\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m    892\u001b[0m \u001b[43m        \u001b[49m\u001b[43msample_weight\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43msample_weight\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m    893\u001b[0m \u001b[43m        \u001b[49m\u001b[43mcheck_input\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcheck_input\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m    894\u001b[0m \u001b[43m    \u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m    895\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\n",
            "File \u001b[1;32m~\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sklearn\\tree\\_classes.py:224\u001b[0m, in \u001b[0;36mBaseDecisionTree.fit\u001b[1;34m(self, X, y, sample_weight, check_input)\u001b[0m\n\u001b[0;32m    221\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mn_outputs_ \u001b[38;5;241m=\u001b[39m y\u001b[38;5;241m.\u001b[39mshape[\u001b[38;5;241m1\u001b[39m]\n\u001b[0;32m    223\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m is_classification:\n\u001b[1;32m--> 224\u001b[0m     \u001b[43mcheck_classification_targets\u001b[49m\u001b[43m(\u001b[49m\u001b[43my\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m    225\u001b[0m     y \u001b[38;5;241m=\u001b[39m np\u001b[38;5;241m.\u001b[39mcopy(y)\n\u001b[0;32m    227\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mclasses_ \u001b[38;5;241m=\u001b[39m []\n",
            "File \u001b[1;32m~\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sklearn\\utils\\multiclass.py:218\u001b[0m, in \u001b[0;36mcheck_classification_targets\u001b[1;34m(y)\u001b[0m\n\u001b[0;32m    210\u001b[0m y_type \u001b[38;5;241m=\u001b[39m type_of_target(y, input_name\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124my\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[0;32m    211\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m y_type \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m [\n\u001b[0;32m    212\u001b[0m     \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mbinary\u001b[39m\u001b[38;5;124m\"\u001b[39m,\n\u001b[0;32m    213\u001b[0m     \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mmulticlass\u001b[39m\u001b[38;5;124m\"\u001b[39m,\n\u001b[1;32m   (...)\u001b[0m\n\u001b[0;32m    216\u001b[0m     \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mmultilabel-sequences\u001b[39m\u001b[38;5;124m\"\u001b[39m,\n\u001b[0;32m    217\u001b[0m ]:\n\u001b[1;32m--> 218\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mUnknown label type: \u001b[39m\u001b[38;5;132;01m%r\u001b[39;00m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;241m%\u001b[39m y_type)\n",
            "\u001b[1;31mValueError\u001b[0m: Unknown label type: 'continuous'"
          ]
        }
      ],
      "source": [
        "model.fit(x,y)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "a2ceaaed",
      "metadata": {
        "id": "a2ceaaed",
        "outputId": "af66d86c-9554-465d-eb67-90922c04d5c3"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>temperature</th>\n",
              "      <th>humidity</th>\n",
              "      <th>ph</th>\n",
              "      <th>rainfall</th>\n",
              "      <th>label</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>20.879744</td>\n",
              "      <td>82.002744</td>\n",
              "      <td>6.502985</td>\n",
              "      <td>202.935536</td>\n",
              "      <td>rice</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>21.770462</td>\n",
              "      <td>80.319644</td>\n",
              "      <td>7.038096</td>\n",
              "      <td>226.655537</td>\n",
              "      <td>rice</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>23.004459</td>\n",
              "      <td>82.320763</td>\n",
              "      <td>7.840207</td>\n",
              "      <td>263.964248</td>\n",
              "      <td>rice</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>26.491096</td>\n",
              "      <td>80.158363</td>\n",
              "      <td>6.980401</td>\n",
              "      <td>242.864034</td>\n",
              "      <td>rice</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>20.130175</td>\n",
              "      <td>81.604873</td>\n",
              "      <td>7.628473</td>\n",
              "      <td>262.717340</td>\n",
              "      <td>rice</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3095</th>\n",
              "      <td>25.287846</td>\n",
              "      <td>89.636679</td>\n",
              "      <td>6.765095</td>\n",
              "      <td>58.286977</td>\n",
              "      <td>watermelon</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3096</th>\n",
              "      <td>26.638386</td>\n",
              "      <td>84.695469</td>\n",
              "      <td>6.189214</td>\n",
              "      <td>48.324286</td>\n",
              "      <td>watermelon</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3097</th>\n",
              "      <td>25.331045</td>\n",
              "      <td>84.305338</td>\n",
              "      <td>6.904242</td>\n",
              "      <td>41.532187</td>\n",
              "      <td>watermelon</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3098</th>\n",
              "      <td>26.897502</td>\n",
              "      <td>83.892415</td>\n",
              "      <td>6.463271</td>\n",
              "      <td>43.971937</td>\n",
              "      <td>watermelon</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3099</th>\n",
              "      <td>26.986037</td>\n",
              "      <td>89.413849</td>\n",
              "      <td>6.260839</td>\n",
              "      <td>58.548767</td>\n",
              "      <td>watermelon</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>3100 rows Ã— 5 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "      temperature   humidity        ph    rainfall       label\n",
              "0       20.879744  82.002744  6.502985  202.935536        rice\n",
              "1       21.770462  80.319644  7.038096  226.655537        rice\n",
              "2       23.004459  82.320763  7.840207  263.964248        rice\n",
              "3       26.491096  80.158363  6.980401  242.864034        rice\n",
              "4       20.130175  81.604873  7.628473  262.717340        rice\n",
              "...           ...        ...       ...         ...         ...\n",
              "3095    25.287846  89.636679  6.765095   58.286977  watermelon\n",
              "3096    26.638386  84.695469  6.189214   48.324286  watermelon\n",
              "3097    25.331045  84.305338  6.904242   41.532187  watermelon\n",
              "3098    26.897502  83.892415  6.463271   43.971937  watermelon\n",
              "3099    26.986037  89.413849  6.260839   58.548767  watermelon\n",
              "\n",
              "[3100 rows x 5 columns]"
            ]
          },
          "execution_count": 3,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "df_cpdata=pd.read_csv(r\"C:\\Users\\Sangeeta\\Downloads\\cpdata.csv\")\n",
        "df_cpdata"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "5246d35f",
      "metadata": {
        "id": "5246d35f",
        "outputId": "9fac3d26-789e-4476-fd1a-2702786dcc42"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>temperature</th>\n",
              "      <th>humidity</th>\n",
              "      <th>ph</th>\n",
              "      <th>rainfall</th>\n",
              "      <th>label</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>20.879744</td>\n",
              "      <td>82.002744</td>\n",
              "      <td>6.502985</td>\n",
              "      <td>202.935536</td>\n",
              "      <td>rice</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>21.770462</td>\n",
              "      <td>80.319644</td>\n",
              "      <td>7.038096</td>\n",
              "      <td>226.655537</td>\n",
              "      <td>rice</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>23.004459</td>\n",
              "      <td>82.320763</td>\n",
              "      <td>7.840207</td>\n",
              "      <td>263.964248</td>\n",
              "      <td>rice</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>26.491096</td>\n",
              "      <td>80.158363</td>\n",
              "      <td>6.980401</td>\n",
              "      <td>242.864034</td>\n",
              "      <td>rice</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>20.130175</td>\n",
              "      <td>81.604873</td>\n",
              "      <td>7.628473</td>\n",
              "      <td>262.717340</td>\n",
              "      <td>rice</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>23.058049</td>\n",
              "      <td>83.370118</td>\n",
              "      <td>7.073454</td>\n",
              "      <td>251.055000</td>\n",
              "      <td>rice</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>22.708838</td>\n",
              "      <td>82.639414</td>\n",
              "      <td>5.700806</td>\n",
              "      <td>271.324860</td>\n",
              "      <td>rice</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>20.277744</td>\n",
              "      <td>82.894086</td>\n",
              "      <td>5.718627</td>\n",
              "      <td>241.974195</td>\n",
              "      <td>rice</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>24.515881</td>\n",
              "      <td>83.535216</td>\n",
              "      <td>6.685346</td>\n",
              "      <td>230.446236</td>\n",
              "      <td>rice</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>23.223974</td>\n",
              "      <td>83.033227</td>\n",
              "      <td>6.336254</td>\n",
              "      <td>221.209196</td>\n",
              "      <td>rice</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   temperature   humidity        ph    rainfall label\n",
              "0    20.879744  82.002744  6.502985  202.935536  rice\n",
              "1    21.770462  80.319644  7.038096  226.655537  rice\n",
              "2    23.004459  82.320763  7.840207  263.964248  rice\n",
              "3    26.491096  80.158363  6.980401  242.864034  rice\n",
              "4    20.130175  81.604873  7.628473  262.717340  rice\n",
              "5    23.058049  83.370118  7.073454  251.055000  rice\n",
              "6    22.708838  82.639414  5.700806  271.324860  rice\n",
              "7    20.277744  82.894086  5.718627  241.974195  rice\n",
              "8    24.515881  83.535216  6.685346  230.446236  rice\n",
              "9    23.223974  83.033227  6.336254  221.209196  rice"
            ]
          },
          "execution_count": 4,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "df_cpdata.head(10)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "8e0d52c2",
      "metadata": {
        "id": "8e0d52c2",
        "outputId": "cbcb57cc-26b1-43c7-e144-f8ce1e429c11"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>temperature</th>\n",
              "      <th>humidity</th>\n",
              "      <th>ph</th>\n",
              "      <th>rainfall</th>\n",
              "      <th>label</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>3090</th>\n",
              "      <td>24.693689</td>\n",
              "      <td>85.569676</td>\n",
              "      <td>6.353107</td>\n",
              "      <td>48.993908</td>\n",
              "      <td>watermelon</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3091</th>\n",
              "      <td>24.543570</td>\n",
              "      <td>84.608083</td>\n",
              "      <td>6.211749</td>\n",
              "      <td>42.006603</td>\n",
              "      <td>watermelon</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3092</th>\n",
              "      <td>25.897623</td>\n",
              "      <td>81.966648</td>\n",
              "      <td>6.277245</td>\n",
              "      <td>54.499601</td>\n",
              "      <td>watermelon</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3093</th>\n",
              "      <td>26.633312</td>\n",
              "      <td>84.317568</td>\n",
              "      <td>6.560444</td>\n",
              "      <td>56.318662</td>\n",
              "      <td>watermelon</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3094</th>\n",
              "      <td>25.357947</td>\n",
              "      <td>80.458463</td>\n",
              "      <td>6.903020</td>\n",
              "      <td>47.720782</td>\n",
              "      <td>watermelon</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3095</th>\n",
              "      <td>25.287846</td>\n",
              "      <td>89.636679</td>\n",
              "      <td>6.765095</td>\n",
              "      <td>58.286977</td>\n",
              "      <td>watermelon</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3096</th>\n",
              "      <td>26.638386</td>\n",
              "      <td>84.695469</td>\n",
              "      <td>6.189214</td>\n",
              "      <td>48.324286</td>\n",
              "      <td>watermelon</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3097</th>\n",
              "      <td>25.331045</td>\n",
              "      <td>84.305338</td>\n",
              "      <td>6.904242</td>\n",
              "      <td>41.532187</td>\n",
              "      <td>watermelon</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3098</th>\n",
              "      <td>26.897502</td>\n",
              "      <td>83.892415</td>\n",
              "      <td>6.463271</td>\n",
              "      <td>43.971937</td>\n",
              "      <td>watermelon</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3099</th>\n",
              "      <td>26.986037</td>\n",
              "      <td>89.413849</td>\n",
              "      <td>6.260839</td>\n",
              "      <td>58.548767</td>\n",
              "      <td>watermelon</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "      temperature   humidity        ph   rainfall       label\n",
              "3090    24.693689  85.569676  6.353107  48.993908  watermelon\n",
              "3091    24.543570  84.608083  6.211749  42.006603  watermelon\n",
              "3092    25.897623  81.966648  6.277245  54.499601  watermelon\n",
              "3093    26.633312  84.317568  6.560444  56.318662  watermelon\n",
              "3094    25.357947  80.458463  6.903020  47.720782  watermelon\n",
              "3095    25.287846  89.636679  6.765095  58.286977  watermelon\n",
              "3096    26.638386  84.695469  6.189214  48.324286  watermelon\n",
              "3097    25.331045  84.305338  6.904242  41.532187  watermelon\n",
              "3098    26.897502  83.892415  6.463271  43.971937  watermelon\n",
              "3099    26.986037  89.413849  6.260839  58.548767  watermelon"
            ]
          },
          "execution_count": 5,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "df_cpdata.tail(10)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "d836a30e",
      "metadata": {
        "id": "d836a30e",
        "outputId": "693ec124-e4fc-45bb-f64d-20d763ad7c4b"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "temperature    0\n",
              "humidity       0\n",
              "ph             0\n",
              "rainfall       0\n",
              "label          0\n",
              "dtype: int64"
            ]
          },
          "execution_count": 6,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "df_cpdata.isnull().sum()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "540a9eef",
      "metadata": {
        "id": "540a9eef",
        "outputId": "f5049254-bebc-499f-e2e8-bb1fe4750e54"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>temperature</th>\n",
              "      <th>humidity</th>\n",
              "      <th>ph</th>\n",
              "      <th>rainfall</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>3100.000000</td>\n",
              "      <td>3100.000000</td>\n",
              "      <td>3100.000000</td>\n",
              "      <td>3100.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>27.108466</td>\n",
              "      <td>66.005312</td>\n",
              "      <td>6.368913</td>\n",
              "      <td>110.213031</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>7.566308</td>\n",
              "      <td>24.007713</td>\n",
              "      <td>0.809477</td>\n",
              "      <td>64.048562</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>8.825675</td>\n",
              "      <td>10.034048</td>\n",
              "      <td>3.504752</td>\n",
              "      <td>20.211267</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>22.810495</td>\n",
              "      <td>55.244920</td>\n",
              "      <td>5.895343</td>\n",
              "      <td>64.909095</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>26.102848</td>\n",
              "      <td>68.980529</td>\n",
              "      <td>6.342518</td>\n",
              "      <td>97.057093</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>29.365644</td>\n",
              "      <td>84.446524</td>\n",
              "      <td>6.841616</td>\n",
              "      <td>141.210784</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>54.986760</td>\n",
              "      <td>99.981876</td>\n",
              "      <td>9.935091</td>\n",
              "      <td>397.315380</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "       temperature     humidity           ph     rainfall\n",
              "count  3100.000000  3100.000000  3100.000000  3100.000000\n",
              "mean     27.108466    66.005312     6.368913   110.213031\n",
              "std       7.566308    24.007713     0.809477    64.048562\n",
              "min       8.825675    10.034048     3.504752    20.211267\n",
              "25%      22.810495    55.244920     5.895343    64.909095\n",
              "50%      26.102848    68.980529     6.342518    97.057093\n",
              "75%      29.365644    84.446524     6.841616   141.210784\n",
              "max      54.986760    99.981876     9.935091   397.315380"
            ]
          },
          "execution_count": 7,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "df_cpdata.describe()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "0ab17045",
      "metadata": {
        "id": "0ab17045"
      },
      "outputs": [],
      "source": [
        "df2=df_cpdata"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "d51ed100",
      "metadata": {
        "id": "d51ed100",
        "outputId": "ec9bf3c9-9a40-4419-ab9c-500098a38076"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "<Axes: xlabel='rainfall', ylabel='label'>"
            ]
          },
          "execution_count": 9,
          "metadata": {},
          "output_type": "execute_result"
        },
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "sns.barplot(x='rainfall',y='label',data=df2)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "956602a5",
      "metadata": {
        "id": "956602a5"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "5f312403",
      "metadata": {
        "id": "5f312403",
        "outputId": "4711ebe5-2296-49a2-9107-f155cf886818"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Crop</th>\n",
              "      <th>Ph</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Bajra</td>\n",
              "      <td>3.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Banana</td>\n",
              "      <td>6.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Barley</td>\n",
              "      <td>3.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Bean</td>\n",
              "      <td>5.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Black pepper</td>\n",
              "      <td>6.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Blackgram</td>\n",
              "      <td>5.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Bottle Gourd</td>\n",
              "      <td>6.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Brinjal</td>\n",
              "      <td>5.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Cabbage</td>\n",
              "      <td>5.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Cardamom</td>\n",
              "      <td>4.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Carrot</td>\n",
              "      <td>5.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Castor seed</td>\n",
              "      <td>5.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Cauliflower</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Chillies</td>\n",
              "      <td>5.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Colocosia</td>\n",
              "      <td>5.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Coriander</td>\n",
              "      <td>8.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Cotton</td>\n",
              "      <td>7.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Cowpea</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Drum Stick</td>\n",
              "      <td>6.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Garlic</td>\n",
              "      <td>6.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>Ginger</td>\n",
              "      <td>5.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>Gram</td>\n",
              "      <td>6.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>Grapes</td>\n",
              "      <td>6.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>Groundnut</td>\n",
              "      <td>5.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>Guar seed</td>\n",
              "      <td>5.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>Horse-gram</td>\n",
              "      <td>5.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>Jowar</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>Jute</td>\n",
              "      <td>7.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>Khesari</td>\n",
              "      <td>7.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>Lady Finger</td>\n",
              "      <td>6.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>Lentil</td>\n",
              "      <td>7.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>Linseed</td>\n",
              "      <td>5.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>Maize</td>\n",
              "      <td>5.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>Mesta</td>\n",
              "      <td>4.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>Moong(Green Gram)</td>\n",
              "      <td>6.30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>Moth</td>\n",
              "      <td>4.01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>Onion</td>\n",
              "      <td>7.30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>Orange</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>Papaya</td>\n",
              "      <td>6.90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>Peas &amp; beans (Pulses)</td>\n",
              "      <td>6.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>Pineapple</td>\n",
              "      <td>5.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>41</th>\n",
              "      <td>Potato</td>\n",
              "      <td>6.30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>42</th>\n",
              "      <td>Raddish</td>\n",
              "      <td>7.30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43</th>\n",
              "      <td>Ragi</td>\n",
              "      <td>5.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>44</th>\n",
              "      <td>Rice</td>\n",
              "      <td>5.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>45</th>\n",
              "      <td>Safflower</td>\n",
              "      <td>5.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>46</th>\n",
              "      <td>Sannhamp</td>\n",
              "      <td>5.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>47</th>\n",
              "      <td>Sesamum</td>\n",
              "      <td>5.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>48</th>\n",
              "      <td>Soyabean</td>\n",
              "      <td>6.90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49</th>\n",
              "      <td>Sugarcane</td>\n",
              "      <td>5.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50</th>\n",
              "      <td>Sunflower</td>\n",
              "      <td>6.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>51</th>\n",
              "      <td>Sweet potato</td>\n",
              "      <td>5.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>52</th>\n",
              "      <td>Tapioca</td>\n",
              "      <td>5.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>53</th>\n",
              "      <td>Tomato</td>\n",
              "      <td>5.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>54</th>\n",
              "      <td>Turmeric</td>\n",
              "      <td>4.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>55</th>\n",
              "      <td>Urad</td>\n",
              "      <td>6.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>56</th>\n",
              "      <td>Varagu</td>\n",
              "      <td>5.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>57</th>\n",
              "      <td>Wheat</td>\n",
              "      <td>5.00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                     Crop    Ph\n",
              "0                   Bajra  3.00\n",
              "1                  Banana  6.50\n",
              "2                  Barley  3.00\n",
              "3                    Bean  5.50\n",
              "4            Black pepper  6.40\n",
              "5               Blackgram  5.00\n",
              "6            Bottle Gourd  6.50\n",
              "7                 Brinjal  5.50\n",
              "8                 Cabbage  5.50\n",
              "9                Cardamom  4.50\n",
              "10                 Carrot  5.50\n",
              "11            Castor seed  5.00\n",
              "12            Cauliflower  6.00\n",
              "13               Chillies  5.50\n",
              "14              Colocosia  5.50\n",
              "15              Coriander  8.00\n",
              "16                 Cotton  7.00\n",
              "17                 Cowpea  6.00\n",
              "18             Drum Stick  6.40\n",
              "19                 Garlic  6.10\n",
              "20                 Ginger  5.00\n",
              "21                   Gram  6.10\n",
              "22                 Grapes  6.50\n",
              "23              Groundnut  5.00\n",
              "24              Guar seed  5.00\n",
              "25             Horse-gram  5.00\n",
              "26                  Jowar  6.00\n",
              "27                   Jute  7.40\n",
              "28                Khesari  7.80\n",
              "29            Lady Finger  6.10\n",
              "30                 Lentil  7.00\n",
              "31                Linseed  5.00\n",
              "32                  Maize  5.50\n",
              "33                  Mesta  4.50\n",
              "34      Moong(Green Gram)  6.30\n",
              "35                   Moth  4.01\n",
              "36                  Onion  7.30\n",
              "37                 Orange  6.00\n",
              "38                 Papaya  6.90\n",
              "39  Peas & beans (Pulses)  6.10\n",
              "40              Pineapple  5.80\n",
              "41                 Potato  6.30\n",
              "42                Raddish  7.30\n",
              "43                   Ragi  5.10\n",
              "44                   Rice  5.00\n",
              "45              Safflower  5.00\n",
              "46               Sannhamp  5.80\n",
              "47                Sesamum  5.50\n",
              "48               Soyabean  6.90\n",
              "49              Sugarcane  5.00\n",
              "50              Sunflower  6.10\n",
              "51           Sweet potato  5.60\n",
              "52                Tapioca  5.10\n",
              "53                 Tomato  5.00\n",
              "54               Turmeric  4.50\n",
              "55                   Urad  6.80\n",
              "56                 Varagu  5.50\n",
              "57                  Wheat  5.00"
            ]
          },
          "execution_count": 10,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "df_cropph=pd.read_csv(r\"C:\\Users\\Sangeeta\\Downloads\\cropph.csv\")\n",
        "df_cropph"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "9a0f6231",
      "metadata": {
        "id": "9a0f6231",
        "outputId": "23403f91-2fa3-4fe2-a6ec-7a68b30561a3"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 58 entries, 0 to 57\n",
            "Data columns (total 2 columns):\n",
            " #   Column  Non-Null Count  Dtype  \n",
            "---  ------  --------------  -----  \n",
            " 0   Crop    58 non-null     object \n",
            " 1    Ph     58 non-null     float64\n",
            "dtypes: float64(1), object(1)\n",
            "memory usage: 1.0+ KB\n"
          ]
        }
      ],
      "source": [
        "df_cropph.info()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "db9adff1",
      "metadata": {
        "id": "db9adff1",
        "outputId": "79b89044-676d-44a8-f945-3482fde4e3fc"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Ph</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>58.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>5.727759</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>1.014469</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>3.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>5.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>5.550000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>6.375000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>8.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "              Ph\n",
              "count  58.000000\n",
              "mean    5.727759\n",
              "std     1.014469\n",
              "min     3.000000\n",
              "25%     5.000000\n",
              "50%     5.550000\n",
              "75%     6.375000\n",
              "max     8.000000"
            ]
          },
          "execution_count": 12,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "df_cropph.describe()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "601de688",
      "metadata": {
        "id": "601de688",
        "outputId": "254510c7-29ab-4bbc-d8ee-559ab0808aba"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Crop</th>\n",
              "      <th>State</th>\n",
              "      <th>Cost of Cultivation (`/Hectare) A2+FL</th>\n",
              "      <th>Cost of Cultivation (`/Hectare) C2</th>\n",
              "      <th>Cost of Production (`/Quintal) C2</th>\n",
              "      <th>Yield (Quintal/ Hectare)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>ARHAR</td>\n",
              "      <td>Uttar Pradesh</td>\n",
              "      <td>9794.05</td>\n",
              "      <td>23076.74</td>\n",
              "      <td>1941.55</td>\n",
              "      <td>9.83</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>ARHAR</td>\n",
              "      <td>Karnataka</td>\n",
              "      <td>10593.15</td>\n",
              "      <td>16528.68</td>\n",
              "      <td>2172.46</td>\n",
              "      <td>7.47</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>ARHAR</td>\n",
              "      <td>Gujarat</td>\n",
              "      <td>13468.82</td>\n",
              "      <td>19551.90</td>\n",
              "      <td>1898.30</td>\n",
              "      <td>9.59</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>ARHAR</td>\n",
              "      <td>Andhra Pradesh</td>\n",
              "      <td>17051.66</td>\n",
              "      <td>24171.65</td>\n",
              "      <td>3670.54</td>\n",
              "      <td>6.42</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>ARHAR</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>17130.55</td>\n",
              "      <td>25270.26</td>\n",
              "      <td>2775.80</td>\n",
              "      <td>8.72</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>COTTON</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>23711.44</td>\n",
              "      <td>33116.82</td>\n",
              "      <td>2539.47</td>\n",
              "      <td>12.69</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>COTTON</td>\n",
              "      <td>Punjab</td>\n",
              "      <td>29047.10</td>\n",
              "      <td>50828.83</td>\n",
              "      <td>2003.76</td>\n",
              "      <td>24.39</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>COTTON</td>\n",
              "      <td>Andhra Pradesh</td>\n",
              "      <td>29140.77</td>\n",
              "      <td>44756.72</td>\n",
              "      <td>2509.99</td>\n",
              "      <td>17.83</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>COTTON</td>\n",
              "      <td>Gujarat</td>\n",
              "      <td>29616.09</td>\n",
              "      <td>42070.44</td>\n",
              "      <td>2179.26</td>\n",
              "      <td>19.05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>COTTON</td>\n",
              "      <td>Haryana</td>\n",
              "      <td>29918.97</td>\n",
              "      <td>44018.18</td>\n",
              "      <td>2127.35</td>\n",
              "      <td>19.90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>GRAM</td>\n",
              "      <td>Rajasthan</td>\n",
              "      <td>8552.69</td>\n",
              "      <td>12610.85</td>\n",
              "      <td>1691.66</td>\n",
              "      <td>6.83</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>GRAM</td>\n",
              "      <td>Madhya Pradesh</td>\n",
              "      <td>9803.89</td>\n",
              "      <td>16873.17</td>\n",
              "      <td>1551.94</td>\n",
              "      <td>10.29</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>GRAM</td>\n",
              "      <td>Uttar Pradesh</td>\n",
              "      <td>12833.04</td>\n",
              "      <td>21618.43</td>\n",
              "      <td>1882.68</td>\n",
              "      <td>10.93</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>GRAM</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>12985.95</td>\n",
              "      <td>18679.33</td>\n",
              "      <td>2277.68</td>\n",
              "      <td>8.05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>GRAM</td>\n",
              "      <td>Andhra Pradesh</td>\n",
              "      <td>14421.98</td>\n",
              "      <td>26762.09</td>\n",
              "      <td>1559.04</td>\n",
              "      <td>16.69</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>GROUNDNUT</td>\n",
              "      <td>Karnataka</td>\n",
              "      <td>13647.10</td>\n",
              "      <td>17314.20</td>\n",
              "      <td>3484.01</td>\n",
              "      <td>4.71</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>GROUNDNUT</td>\n",
              "      <td>Andhra Pradesh</td>\n",
              "      <td>21229.01</td>\n",
              "      <td>30434.61</td>\n",
              "      <td>2554.91</td>\n",
              "      <td>11.97</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>GROUNDNUT</td>\n",
              "      <td>Tamil Nadu</td>\n",
              "      <td>22507.86</td>\n",
              "      <td>30393.66</td>\n",
              "      <td>2358.00</td>\n",
              "      <td>11.98</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>GROUNDNUT</td>\n",
              "      <td>Gujarat</td>\n",
              "      <td>22951.28</td>\n",
              "      <td>30114.45</td>\n",
              "      <td>1918.92</td>\n",
              "      <td>13.45</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>GROUNDNUT</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>26078.66</td>\n",
              "      <td>32683.46</td>\n",
              "      <td>3207.35</td>\n",
              "      <td>9.33</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>MAIZE</td>\n",
              "      <td>Bihar</td>\n",
              "      <td>13513.92</td>\n",
              "      <td>19857.70</td>\n",
              "      <td>404.43</td>\n",
              "      <td>42.95</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>MAIZE</td>\n",
              "      <td>Karnataka</td>\n",
              "      <td>13792.85</td>\n",
              "      <td>20671.54</td>\n",
              "      <td>581.69</td>\n",
              "      <td>31.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>MAIZE</td>\n",
              "      <td>Rajasthan</td>\n",
              "      <td>14421.46</td>\n",
              "      <td>19810.29</td>\n",
              "      <td>658.77</td>\n",
              "      <td>23.56</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>MAIZE</td>\n",
              "      <td>Uttar Pradesh</td>\n",
              "      <td>15635.43</td>\n",
              "      <td>21045.11</td>\n",
              "      <td>1387.36</td>\n",
              "      <td>13.70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>MAIZE</td>\n",
              "      <td>Andhra Pradesh</td>\n",
              "      <td>25687.09</td>\n",
              "      <td>37801.85</td>\n",
              "      <td>840.58</td>\n",
              "      <td>42.68</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>MOONG</td>\n",
              "      <td>Orissa</td>\n",
              "      <td>5483.54</td>\n",
              "      <td>8266.98</td>\n",
              "      <td>2614.14</td>\n",
              "      <td>3.01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>MOONG</td>\n",
              "      <td>Rajasthan</td>\n",
              "      <td>6204.23</td>\n",
              "      <td>9165.59</td>\n",
              "      <td>2068.67</td>\n",
              "      <td>4.05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>MOONG</td>\n",
              "      <td>Karnataka</td>\n",
              "      <td>6440.64</td>\n",
              "      <td>7868.64</td>\n",
              "      <td>5777.48</td>\n",
              "      <td>1.32</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>MOONG</td>\n",
              "      <td>Andhra Pradesh</td>\n",
              "      <td>6684.18</td>\n",
              "      <td>13209.32</td>\n",
              "      <td>2228.97</td>\n",
              "      <td>5.90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>MOONG</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>10780.76</td>\n",
              "      <td>15371.45</td>\n",
              "      <td>2261.24</td>\n",
              "      <td>6.70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>PADDY</td>\n",
              "      <td>Uttar Pradesh</td>\n",
              "      <td>17022.00</td>\n",
              "      <td>28144.50</td>\n",
              "      <td>732.62</td>\n",
              "      <td>36.61</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>PADDY</td>\n",
              "      <td>Orissa</td>\n",
              "      <td>17478.05</td>\n",
              "      <td>25909.05</td>\n",
              "      <td>715.04</td>\n",
              "      <td>32.42</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>PADDY</td>\n",
              "      <td>West Bengal</td>\n",
              "      <td>24731.06</td>\n",
              "      <td>33046.12</td>\n",
              "      <td>731.25</td>\n",
              "      <td>39.04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>PADDY</td>\n",
              "      <td>Punjab</td>\n",
              "      <td>25154.75</td>\n",
              "      <td>45291.24</td>\n",
              "      <td>669.86</td>\n",
              "      <td>67.41</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>PADDY</td>\n",
              "      <td>Andhra Pradesh</td>\n",
              "      <td>29664.84</td>\n",
              "      <td>46450.20</td>\n",
              "      <td>789.90</td>\n",
              "      <td>56.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>RAPESEED AND MUSTARD</td>\n",
              "      <td>Madhya Pradesh</td>\n",
              "      <td>8686.43</td>\n",
              "      <td>17705.93</td>\n",
              "      <td>1279.60</td>\n",
              "      <td>12.94</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>RAPESEED AND MUSTARD</td>\n",
              "      <td>Rajasthan</td>\n",
              "      <td>11385.70</td>\n",
              "      <td>19259.84</td>\n",
              "      <td>1341.29</td>\n",
              "      <td>13.54</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>RAPESEED AND MUSTARD</td>\n",
              "      <td>Uttar Pradesh</td>\n",
              "      <td>12774.41</td>\n",
              "      <td>22560.30</td>\n",
              "      <td>1595.56</td>\n",
              "      <td>13.57</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>RAPESEED AND MUSTARD</td>\n",
              "      <td>Gujarat</td>\n",
              "      <td>13740.64</td>\n",
              "      <td>19083.55</td>\n",
              "      <td>1610.40</td>\n",
              "      <td>11.61</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>RAPESEED AND MUSTARD</td>\n",
              "      <td>Haryana</td>\n",
              "      <td>14715.27</td>\n",
              "      <td>27507.54</td>\n",
              "      <td>1251.12</td>\n",
              "      <td>19.94</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>SUGARCANE</td>\n",
              "      <td>Uttar Pradesh</td>\n",
              "      <td>24538.32</td>\n",
              "      <td>45239.51</td>\n",
              "      <td>93.64</td>\n",
              "      <td>448.89</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>41</th>\n",
              "      <td>SUGARCANE</td>\n",
              "      <td>Karnataka</td>\n",
              "      <td>55655.44</td>\n",
              "      <td>86765.77</td>\n",
              "      <td>86.53</td>\n",
              "      <td>986.21</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>42</th>\n",
              "      <td>SUGARCANE</td>\n",
              "      <td>Andhra Pradesh</td>\n",
              "      <td>56621.16</td>\n",
              "      <td>91442.63</td>\n",
              "      <td>119.72</td>\n",
              "      <td>757.92</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43</th>\n",
              "      <td>SUGARCANE</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>57673.60</td>\n",
              "      <td>85801.95</td>\n",
              "      <td>107.56</td>\n",
              "      <td>744.01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>44</th>\n",
              "      <td>SUGARCANE</td>\n",
              "      <td>Tamil Nadu</td>\n",
              "      <td>66335.06</td>\n",
              "      <td>89025.27</td>\n",
              "      <td>85.79</td>\n",
              "      <td>1015.45</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>45</th>\n",
              "      <td>WHEAT</td>\n",
              "      <td>Madhya Pradesh</td>\n",
              "      <td>12464.40</td>\n",
              "      <td>22489.75</td>\n",
              "      <td>810.25</td>\n",
              "      <td>23.59</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>46</th>\n",
              "      <td>WHEAT</td>\n",
              "      <td>Punjab</td>\n",
              "      <td>17945.58</td>\n",
              "      <td>35423.48</td>\n",
              "      <td>804.80</td>\n",
              "      <td>39.83</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>47</th>\n",
              "      <td>WHEAT</td>\n",
              "      <td>Uttar Pradesh</td>\n",
              "      <td>18979.38</td>\n",
              "      <td>31902.74</td>\n",
              "      <td>769.84</td>\n",
              "      <td>34.99</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>48</th>\n",
              "      <td>WHEAT</td>\n",
              "      <td>Rajasthan</td>\n",
              "      <td>19119.08</td>\n",
              "      <td>29876.36</td>\n",
              "      <td>683.58</td>\n",
              "      <td>37.19</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                    Crop           State  \\\n",
              "0                  ARHAR   Uttar Pradesh   \n",
              "1                  ARHAR       Karnataka   \n",
              "2                  ARHAR         Gujarat   \n",
              "3                  ARHAR  Andhra Pradesh   \n",
              "4                  ARHAR     Maharashtra   \n",
              "5                 COTTON     Maharashtra   \n",
              "6                 COTTON          Punjab   \n",
              "7                 COTTON  Andhra Pradesh   \n",
              "8                 COTTON         Gujarat   \n",
              "9                 COTTON         Haryana   \n",
              "10                  GRAM       Rajasthan   \n",
              "11                  GRAM  Madhya Pradesh   \n",
              "12                  GRAM   Uttar Pradesh   \n",
              "13                  GRAM     Maharashtra   \n",
              "14                  GRAM  Andhra Pradesh   \n",
              "15             GROUNDNUT       Karnataka   \n",
              "16             GROUNDNUT  Andhra Pradesh   \n",
              "17             GROUNDNUT      Tamil Nadu   \n",
              "18             GROUNDNUT         Gujarat   \n",
              "19             GROUNDNUT     Maharashtra   \n",
              "20                 MAIZE           Bihar   \n",
              "21                 MAIZE       Karnataka   \n",
              "22                 MAIZE       Rajasthan   \n",
              "23                 MAIZE   Uttar Pradesh   \n",
              "24                 MAIZE  Andhra Pradesh   \n",
              "25                 MOONG          Orissa   \n",
              "26                 MOONG       Rajasthan   \n",
              "27                 MOONG       Karnataka   \n",
              "28                 MOONG  Andhra Pradesh   \n",
              "29                 MOONG     Maharashtra   \n",
              "30                 PADDY   Uttar Pradesh   \n",
              "31                 PADDY          Orissa   \n",
              "32                 PADDY     West Bengal   \n",
              "33                 PADDY          Punjab   \n",
              "34                 PADDY  Andhra Pradesh   \n",
              "35  RAPESEED AND MUSTARD  Madhya Pradesh   \n",
              "36  RAPESEED AND MUSTARD       Rajasthan   \n",
              "37  RAPESEED AND MUSTARD   Uttar Pradesh   \n",
              "38  RAPESEED AND MUSTARD         Gujarat   \n",
              "39  RAPESEED AND MUSTARD         Haryana   \n",
              "40             SUGARCANE   Uttar Pradesh   \n",
              "41             SUGARCANE       Karnataka   \n",
              "42             SUGARCANE  Andhra Pradesh   \n",
              "43             SUGARCANE     Maharashtra   \n",
              "44             SUGARCANE      Tamil Nadu   \n",
              "45                 WHEAT  Madhya Pradesh   \n",
              "46                 WHEAT          Punjab   \n",
              "47                 WHEAT   Uttar Pradesh   \n",
              "48                 WHEAT       Rajasthan   \n",
              "\n",
              "    Cost of Cultivation (`/Hectare) A2+FL  Cost of Cultivation (`/Hectare) C2  \\\n",
              "0                                 9794.05                            23076.74   \n",
              "1                                10593.15                            16528.68   \n",
              "2                                13468.82                            19551.90   \n",
              "3                                17051.66                            24171.65   \n",
              "4                                17130.55                            25270.26   \n",
              "5                                23711.44                            33116.82   \n",
              "6                                29047.10                            50828.83   \n",
              "7                                29140.77                            44756.72   \n",
              "8                                29616.09                            42070.44   \n",
              "9                                29918.97                            44018.18   \n",
              "10                                8552.69                            12610.85   \n",
              "11                                9803.89                            16873.17   \n",
              "12                               12833.04                            21618.43   \n",
              "13                               12985.95                            18679.33   \n",
              "14                               14421.98                            26762.09   \n",
              "15                               13647.10                            17314.20   \n",
              "16                               21229.01                            30434.61   \n",
              "17                               22507.86                            30393.66   \n",
              "18                               22951.28                            30114.45   \n",
              "19                               26078.66                            32683.46   \n",
              "20                               13513.92                            19857.70   \n",
              "21                               13792.85                            20671.54   \n",
              "22                               14421.46                            19810.29   \n",
              "23                               15635.43                            21045.11   \n",
              "24                               25687.09                            37801.85   \n",
              "25                                5483.54                             8266.98   \n",
              "26                                6204.23                             9165.59   \n",
              "27                                6440.64                             7868.64   \n",
              "28                                6684.18                            13209.32   \n",
              "29                               10780.76                            15371.45   \n",
              "30                               17022.00                            28144.50   \n",
              "31                               17478.05                            25909.05   \n",
              "32                               24731.06                            33046.12   \n",
              "33                               25154.75                            45291.24   \n",
              "34                               29664.84                            46450.20   \n",
              "35                                8686.43                            17705.93   \n",
              "36                               11385.70                            19259.84   \n",
              "37                               12774.41                            22560.30   \n",
              "38                               13740.64                            19083.55   \n",
              "39                               14715.27                            27507.54   \n",
              "40                               24538.32                            45239.51   \n",
              "41                               55655.44                            86765.77   \n",
              "42                               56621.16                            91442.63   \n",
              "43                               57673.60                            85801.95   \n",
              "44                               66335.06                            89025.27   \n",
              "45                               12464.40                            22489.75   \n",
              "46                               17945.58                            35423.48   \n",
              "47                               18979.38                            31902.74   \n",
              "48                               19119.08                            29876.36   \n",
              "\n",
              "    Cost of Production (`/Quintal) C2  Yield (Quintal/ Hectare)   \n",
              "0                             1941.55                       9.83  \n",
              "1                             2172.46                       7.47  \n",
              "2                             1898.30                       9.59  \n",
              "3                             3670.54                       6.42  \n",
              "4                             2775.80                       8.72  \n",
              "5                             2539.47                      12.69  \n",
              "6                             2003.76                      24.39  \n",
              "7                             2509.99                      17.83  \n",
              "8                             2179.26                      19.05  \n",
              "9                             2127.35                      19.90  \n",
              "10                            1691.66                       6.83  \n",
              "11                            1551.94                      10.29  \n",
              "12                            1882.68                      10.93  \n",
              "13                            2277.68                       8.05  \n",
              "14                            1559.04                      16.69  \n",
              "15                            3484.01                       4.71  \n",
              "16                            2554.91                      11.97  \n",
              "17                            2358.00                      11.98  \n",
              "18                            1918.92                      13.45  \n",
              "19                            3207.35                       9.33  \n",
              "20                             404.43                      42.95  \n",
              "21                             581.69                      31.10  \n",
              "22                             658.77                      23.56  \n",
              "23                            1387.36                      13.70  \n",
              "24                             840.58                      42.68  \n",
              "25                            2614.14                       3.01  \n",
              "26                            2068.67                       4.05  \n",
              "27                            5777.48                       1.32  \n",
              "28                            2228.97                       5.90  \n",
              "29                            2261.24                       6.70  \n",
              "30                             732.62                      36.61  \n",
              "31                             715.04                      32.42  \n",
              "32                             731.25                      39.04  \n",
              "33                             669.86                      67.41  \n",
              "34                             789.90                      56.00  \n",
              "35                            1279.60                      12.94  \n",
              "36                            1341.29                      13.54  \n",
              "37                            1595.56                      13.57  \n",
              "38                            1610.40                      11.61  \n",
              "39                            1251.12                      19.94  \n",
              "40                              93.64                     448.89  \n",
              "41                              86.53                     986.21  \n",
              "42                             119.72                     757.92  \n",
              "43                             107.56                     744.01  \n",
              "44                              85.79                    1015.45  \n",
              "45                             810.25                      23.59  \n",
              "46                             804.80                      39.83  \n",
              "47                             769.84                      34.99  \n",
              "48                             683.58                      37.19  "
            ]
          },
          "execution_count": 13,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "df_statewise=pd.read_csv(r\"C:\\Users\\Sangeeta\\Downloads\\state_wise_crop_production.csv\")\n",
        "df_statewise"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "57ded7db",
      "metadata": {
        "id": "57ded7db",
        "outputId": "0ee2973a-f719-4292-aecc-aa7b31e5564c"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 49 entries, 0 to 48\n",
            "Data columns (total 6 columns):\n",
            " #   Column                                 Non-Null Count  Dtype  \n",
            "---  ------                                 --------------  -----  \n",
            " 0   Crop                                   49 non-null     object \n",
            " 1   State                                  49 non-null     object \n",
            " 2   Cost of Cultivation (`/Hectare) A2+FL  49 non-null     float64\n",
            " 3   Cost of Cultivation (`/Hectare) C2     49 non-null     float64\n",
            " 4   Cost of Production (`/Quintal) C2      49 non-null     float64\n",
            " 5   Yield (Quintal/ Hectare)               49 non-null     float64\n",
            "dtypes: float64(4), object(2)\n",
            "memory usage: 2.4+ KB\n"
          ]
        }
      ],
      "source": [
        "df_statewise.info()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "561aee44",
      "metadata": {
        "id": "561aee44",
        "outputId": "fe2d2ee8-a872-4559-8282-4707a1cb4c8d"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Cost of Cultivation (`/Hectare) A2+FL</th>\n",
              "      <th>Cost of Cultivation (`/Hectare) C2</th>\n",
              "      <th>Cost of Production (`/Quintal) C2</th>\n",
              "      <th>Yield (Quintal/ Hectare)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>49.000000</td>\n",
              "      <td>49.000000</td>\n",
              "      <td>49.000000</td>\n",
              "      <td>49.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>20363.537347</td>\n",
              "      <td>31364.666735</td>\n",
              "      <td>1620.537755</td>\n",
              "      <td>98.086735</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>13561.435306</td>\n",
              "      <td>20095.783569</td>\n",
              "      <td>1104.990472</td>\n",
              "      <td>245.293123</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>5483.540000</td>\n",
              "      <td>7868.640000</td>\n",
              "      <td>85.790000</td>\n",
              "      <td>1.320000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>12774.410000</td>\n",
              "      <td>19259.840000</td>\n",
              "      <td>732.620000</td>\n",
              "      <td>9.590000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>17022.000000</td>\n",
              "      <td>25909.050000</td>\n",
              "      <td>1595.560000</td>\n",
              "      <td>13.700000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>24731.060000</td>\n",
              "      <td>35423.480000</td>\n",
              "      <td>2228.970000</td>\n",
              "      <td>36.610000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>66335.060000</td>\n",
              "      <td>91442.630000</td>\n",
              "      <td>5777.480000</td>\n",
              "      <td>1015.450000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "       Cost of Cultivation (`/Hectare) A2+FL  \\\n",
              "count                              49.000000   \n",
              "mean                            20363.537347   \n",
              "std                             13561.435306   \n",
              "min                              5483.540000   \n",
              "25%                             12774.410000   \n",
              "50%                             17022.000000   \n",
              "75%                             24731.060000   \n",
              "max                             66335.060000   \n",
              "\n",
              "       Cost of Cultivation (`/Hectare) C2  Cost of Production (`/Quintal) C2  \\\n",
              "count                           49.000000                          49.000000   \n",
              "mean                         31364.666735                        1620.537755   \n",
              "std                          20095.783569                        1104.990472   \n",
              "min                           7868.640000                          85.790000   \n",
              "25%                          19259.840000                         732.620000   \n",
              "50%                          25909.050000                        1595.560000   \n",
              "75%                          35423.480000                        2228.970000   \n",
              "max                          91442.630000                        5777.480000   \n",
              "\n",
              "       Yield (Quintal/ Hectare)   \n",
              "count                  49.000000  \n",
              "mean                   98.086735  \n",
              "std                   245.293123  \n",
              "min                     1.320000  \n",
              "25%                     9.590000  \n",
              "50%                    13.700000  \n",
              "75%                    36.610000  \n",
              "max                  1015.450000  "
            ]
          },
          "execution_count": 15,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "df_statewise.describe()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "25256064",
      "metadata": {
        "id": "25256064",
        "outputId": "46f8aa8a-4cb9-47dc-e6dd-bf912754d4df"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Rainfall</th>\n",
              "      <th>Temperature</th>\n",
              "      <th>Ph</th>\n",
              "      <th>Crop</th>\n",
              "      <th>Production</th>\n",
              "      <th>Cropconversion</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>400.15082</td>\n",
              "      <td>20.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>Bajra</td>\n",
              "      <td>0.00690</td>\n",
              "      <td>Bajra</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>400.16331</td>\n",
              "      <td>20.0</td>\n",
              "      <td>3.2</td>\n",
              "      <td>Bajra</td>\n",
              "      <td>0.00747</td>\n",
              "      <td>Bajra</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>400.16387</td>\n",
              "      <td>20.0</td>\n",
              "      <td>3.2</td>\n",
              "      <td>Bajra</td>\n",
              "      <td>0.00749</td>\n",
              "      <td>Bajra</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>400.17967</td>\n",
              "      <td>20.0</td>\n",
              "      <td>3.2</td>\n",
              "      <td>Bajra</td>\n",
              "      <td>0.00822</td>\n",
              "      <td>Bajra</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>400.19582</td>\n",
              "      <td>20.0</td>\n",
              "      <td>3.2</td>\n",
              "      <td>Bajra</td>\n",
              "      <td>0.00895</td>\n",
              "      <td>Bajra</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>189227</th>\n",
              "      <td>766.92202</td>\n",
              "      <td>23.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>Wheat</td>\n",
              "      <td>10.40000</td>\n",
              "      <td>Wheat</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>189228</th>\n",
              "      <td>770.28486</td>\n",
              "      <td>27.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>Wheat</td>\n",
              "      <td>10.40000</td>\n",
              "      <td>Wheat</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>189229</th>\n",
              "      <td>770.00000</td>\n",
              "      <td>26.0</td>\n",
              "      <td>6.1</td>\n",
              "      <td>Wheat</td>\n",
              "      <td>10.40000</td>\n",
              "      <td>Wheat</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>189230</th>\n",
              "      <td>633.83459</td>\n",
              "      <td>22.0</td>\n",
              "      <td>6.2</td>\n",
              "      <td>Wheat</td>\n",
              "      <td>10.40000</td>\n",
              "      <td>Wheat</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>189231</th>\n",
              "      <td>761.20623</td>\n",
              "      <td>22.0</td>\n",
              "      <td>6.2</td>\n",
              "      <td>Wheat</td>\n",
              "      <td>10.40000</td>\n",
              "      <td>Wheat</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>189232 rows Ã— 6 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "         Rainfall  Temperature   Ph   Crop  Production Cropconversion\n",
              "0       400.15082         20.0  3.0  Bajra     0.00690          Bajra\n",
              "1       400.16331         20.0  3.2  Bajra     0.00747          Bajra\n",
              "2       400.16387         20.0  3.2  Bajra     0.00749          Bajra\n",
              "3       400.17967         20.0  3.2  Bajra     0.00822          Bajra\n",
              "4       400.19582         20.0  3.2  Bajra     0.00895          Bajra\n",
              "...           ...          ...  ...    ...         ...            ...\n",
              "189227  766.92202         23.0  6.0  Wheat    10.40000          Wheat\n",
              "189228  770.28486         27.0  6.0  Wheat    10.40000          Wheat\n",
              "189229  770.00000         26.0  6.1  Wheat    10.40000          Wheat\n",
              "189230  633.83459         22.0  6.2  Wheat    10.40000          Wheat\n",
              "189231  761.20623         22.0  6.2  Wheat    10.40000          Wheat\n",
              "\n",
              "[189232 rows x 6 columns]"
            ]
          },
          "execution_count": 16,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "df_cropvarious=pd.read_csv(r\"C:\\Users\\Sangeeta\\Downloads\\cropproductiononvariousfactors.csv\")\n",
        "df_cropvarious"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "e1a04bae",
      "metadata": {
        "id": "e1a04bae",
        "outputId": "d2f30ceb-f857-4d8f-a944-4253c68f0551"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Rainfall</th>\n",
              "      <th>Temperature</th>\n",
              "      <th>Ph</th>\n",
              "      <th>Crop</th>\n",
              "      <th>Production</th>\n",
              "      <th>Cropconversion</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>400.15082</td>\n",
              "      <td>20.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>Bajra</td>\n",
              "      <td>0.00690</td>\n",
              "      <td>Bajra</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>400.16331</td>\n",
              "      <td>20.0</td>\n",
              "      <td>3.2</td>\n",
              "      <td>Bajra</td>\n",
              "      <td>0.00747</td>\n",
              "      <td>Bajra</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>400.16387</td>\n",
              "      <td>20.0</td>\n",
              "      <td>3.2</td>\n",
              "      <td>Bajra</td>\n",
              "      <td>0.00749</td>\n",
              "      <td>Bajra</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>400.17967</td>\n",
              "      <td>20.0</td>\n",
              "      <td>3.2</td>\n",
              "      <td>Bajra</td>\n",
              "      <td>0.00822</td>\n",
              "      <td>Bajra</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>400.19582</td>\n",
              "      <td>20.0</td>\n",
              "      <td>3.2</td>\n",
              "      <td>Bajra</td>\n",
              "      <td>0.00895</td>\n",
              "      <td>Bajra</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>400.29047</td>\n",
              "      <td>20.0</td>\n",
              "      <td>3.2</td>\n",
              "      <td>Bajra</td>\n",
              "      <td>0.01328</td>\n",
              "      <td>Bajra</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>400.38869</td>\n",
              "      <td>20.0</td>\n",
              "      <td>3.2</td>\n",
              "      <td>Bajra</td>\n",
              "      <td>0.01777</td>\n",
              "      <td>Bajra</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>400.39889</td>\n",
              "      <td>20.0</td>\n",
              "      <td>3.2</td>\n",
              "      <td>Bajra</td>\n",
              "      <td>0.01824</td>\n",
              "      <td>Bajra</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>400.41592</td>\n",
              "      <td>20.0</td>\n",
              "      <td>3.2</td>\n",
              "      <td>Bajra</td>\n",
              "      <td>0.01902</td>\n",
              "      <td>Bajra</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>400.45608</td>\n",
              "      <td>20.0</td>\n",
              "      <td>3.2</td>\n",
              "      <td>Bajra</td>\n",
              "      <td>0.02085</td>\n",
              "      <td>Bajra</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "    Rainfall  Temperature   Ph   Crop  Production Cropconversion\n",
              "0  400.15082         20.0  3.0  Bajra     0.00690          Bajra\n",
              "1  400.16331         20.0  3.2  Bajra     0.00747          Bajra\n",
              "2  400.16387         20.0  3.2  Bajra     0.00749          Bajra\n",
              "3  400.17967         20.0  3.2  Bajra     0.00822          Bajra\n",
              "4  400.19582         20.0  3.2  Bajra     0.00895          Bajra\n",
              "5  400.29047         20.0  3.2  Bajra     0.01328          Bajra\n",
              "6  400.38869         20.0  3.2  Bajra     0.01777          Bajra\n",
              "7  400.39889         20.0  3.2  Bajra     0.01824          Bajra\n",
              "8  400.41592         20.0  3.2  Bajra     0.01902          Bajra\n",
              "9  400.45608         20.0  3.2  Bajra     0.02085          Bajra"
            ]
          },
          "execution_count": 17,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "df_cropvarious.head(10)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "eb4c27a9",
      "metadata": {
        "id": "eb4c27a9",
        "outputId": "0ef11701-81b3-45c9-bdce-bcbbc62b3c3e"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Rainfall</th>\n",
              "      <th>Temperature</th>\n",
              "      <th>Ph</th>\n",
              "      <th>Crop</th>\n",
              "      <th>Production</th>\n",
              "      <th>Cropconversion</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>189222</th>\n",
              "      <td>763.84005</td>\n",
              "      <td>23.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>Wheat</td>\n",
              "      <td>10.4</td>\n",
              "      <td>Wheat</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>189223</th>\n",
              "      <td>764.17722</td>\n",
              "      <td>24.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>Wheat</td>\n",
              "      <td>10.4</td>\n",
              "      <td>Wheat</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>189224</th>\n",
              "      <td>764.84321</td>\n",
              "      <td>24.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>Wheat</td>\n",
              "      <td>10.4</td>\n",
              "      <td>Wheat</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>189225</th>\n",
              "      <td>764.94737</td>\n",
              "      <td>25.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>Wheat</td>\n",
              "      <td>10.4</td>\n",
              "      <td>Wheat</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>189226</th>\n",
              "      <td>765.28620</td>\n",
              "      <td>24.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>Wheat</td>\n",
              "      <td>10.4</td>\n",
              "      <td>Wheat</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>189227</th>\n",
              "      <td>766.92202</td>\n",
              "      <td>23.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>Wheat</td>\n",
              "      <td>10.4</td>\n",
              "      <td>Wheat</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>189228</th>\n",
              "      <td>770.28486</td>\n",
              "      <td>27.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>Wheat</td>\n",
              "      <td>10.4</td>\n",
              "      <td>Wheat</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>189229</th>\n",
              "      <td>770.00000</td>\n",
              "      <td>26.0</td>\n",
              "      <td>6.1</td>\n",
              "      <td>Wheat</td>\n",
              "      <td>10.4</td>\n",
              "      <td>Wheat</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>189230</th>\n",
              "      <td>633.83459</td>\n",
              "      <td>22.0</td>\n",
              "      <td>6.2</td>\n",
              "      <td>Wheat</td>\n",
              "      <td>10.4</td>\n",
              "      <td>Wheat</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>189231</th>\n",
              "      <td>761.20623</td>\n",
              "      <td>22.0</td>\n",
              "      <td>6.2</td>\n",
              "      <td>Wheat</td>\n",
              "      <td>10.4</td>\n",
              "      <td>Wheat</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "         Rainfall  Temperature   Ph   Crop  Production Cropconversion\n",
              "189222  763.84005         23.0  6.0  Wheat        10.4          Wheat\n",
              "189223  764.17722         24.0  6.0  Wheat        10.4          Wheat\n",
              "189224  764.84321         24.0  6.0  Wheat        10.4          Wheat\n",
              "189225  764.94737         25.0  6.0  Wheat        10.4          Wheat\n",
              "189226  765.28620         24.0  6.0  Wheat        10.4          Wheat\n",
              "189227  766.92202         23.0  6.0  Wheat        10.4          Wheat\n",
              "189228  770.28486         27.0  6.0  Wheat        10.4          Wheat\n",
              "189229  770.00000         26.0  6.1  Wheat        10.4          Wheat\n",
              "189230  633.83459         22.0  6.2  Wheat        10.4          Wheat\n",
              "189231  761.20623         22.0  6.2  Wheat        10.4          Wheat"
            ]
          },
          "execution_count": 18,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "df_cropvarious.tail(10)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "efcb8acb",
      "metadata": {
        "id": "efcb8acb",
        "outputId": "16925106-c137-439c-b2cf-cb3c81d60933"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 189232 entries, 0 to 189231\n",
            "Data columns (total 6 columns):\n",
            " #   Column          Non-Null Count   Dtype  \n",
            "---  ------          --------------   -----  \n",
            " 0   Rainfall        189232 non-null  float64\n",
            " 1   Temperature     189232 non-null  float64\n",
            " 2   Ph              189232 non-null  float64\n",
            " 3   Crop            189232 non-null  object \n",
            " 4   Production      189232 non-null  float64\n",
            " 5   Cropconversion  189232 non-null  object \n",
            "dtypes: float64(4), object(2)\n",
            "memory usage: 8.7+ MB\n"
          ]
        }
      ],
      "source": [
        "df_cropvarious.info()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "d7217f42",
      "metadata": {
        "id": "d7217f42",
        "outputId": "18a9ddca-d727-42c1-f9fa-12ef840b1fa6"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "Rainfall          0\n",
              "Temperature       0\n",
              "Ph                0\n",
              "Crop              0\n",
              "Production        0\n",
              "Cropconversion    0\n",
              "dtype: int64"
            ]
          },
          "execution_count": 20,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "df_cropvarious.isnull().sum()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "7eb6ffdc",
      "metadata": {
        "id": "7eb6ffdc",
        "outputId": "a6acd3cd-fafc-42d9-c569-8339cda079f8"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Rainfall</th>\n",
              "      <th>Temperature</th>\n",
              "      <th>Ph</th>\n",
              "      <th>Production</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>189232.000000</td>\n",
              "      <td>189232.000000</td>\n",
              "      <td>189232.000000</td>\n",
              "      <td>189232.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>693.417573</td>\n",
              "      <td>25.262492</td>\n",
              "      <td>6.337846</td>\n",
              "      <td>5.262677</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>288.988419</td>\n",
              "      <td>4.585660</td>\n",
              "      <td>0.788959</td>\n",
              "      <td>14.441616</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>100.003400</td>\n",
              "      <td>7.000000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>0.000340</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>516.000000</td>\n",
              "      <td>22.026830</td>\n",
              "      <td>5.800000</td>\n",
              "      <td>0.584420</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>628.702885</td>\n",
              "      <td>25.000000</td>\n",
              "      <td>6.300000</td>\n",
              "      <td>1.166670</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>770.000000</td>\n",
              "      <td>28.215000</td>\n",
              "      <td>6.900000</td>\n",
              "      <td>2.989630</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>3000.000000</td>\n",
              "      <td>39.045000</td>\n",
              "      <td>8.800000</td>\n",
              "      <td>955.750340</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "            Rainfall    Temperature             Ph     Production\n",
              "count  189232.000000  189232.000000  189232.000000  189232.000000\n",
              "mean      693.417573      25.262492       6.337846       5.262677\n",
              "std       288.988419       4.585660       0.788959      14.441616\n",
              "min       100.003400       7.000000       3.000000       0.000340\n",
              "25%       516.000000      22.026830       5.800000       0.584420\n",
              "50%       628.702885      25.000000       6.300000       1.166670\n",
              "75%       770.000000      28.215000       6.900000       2.989630\n",
              "max      3000.000000      39.045000       8.800000     955.750340"
            ]
          },
          "execution_count": 21,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "df_cropvarious.describe()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "163806e0",
      "metadata": {
        "id": "163806e0",
        "outputId": "eb95c5c3-a699-4431-cede-cb4939a7bf00"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Rainfall</th>\n",
              "      <th>Temperature</th>\n",
              "      <th>Ph</th>\n",
              "      <th>Crop</th>\n",
              "      <th>Production</th>\n",
              "      <th>Cropconversion</th>\n",
              "      <th>State</th>\n",
              "      <th>Cost of Cultivation (`/Hectare) A2+FL</th>\n",
              "      <th>Cost of Cultivation (`/Hectare) C2</th>\n",
              "      <th>Cost of Production (`/Quintal) C2</th>\n",
              "      <th>Yield (Quintal/ Hectare)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>400.15082</td>\n",
              "      <td>20.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>Bajra</td>\n",
              "      <td>0.00690</td>\n",
              "      <td>Bajra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>400.16331</td>\n",
              "      <td>20.0</td>\n",
              "      <td>3.2</td>\n",
              "      <td>Bajra</td>\n",
              "      <td>0.00747</td>\n",
              "      <td>Bajra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>400.16387</td>\n",
              "      <td>20.0</td>\n",
              "      <td>3.2</td>\n",
              "      <td>Bajra</td>\n",
              "      <td>0.00749</td>\n",
              "      <td>Bajra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>400.17967</td>\n",
              "      <td>20.0</td>\n",
              "      <td>3.2</td>\n",
              "      <td>Bajra</td>\n",
              "      <td>0.00822</td>\n",
              "      <td>Bajra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>400.19582</td>\n",
              "      <td>20.0</td>\n",
              "      <td>3.2</td>\n",
              "      <td>Bajra</td>\n",
              "      <td>0.00895</td>\n",
              "      <td>Bajra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>189227</th>\n",
              "      <td>766.92202</td>\n",
              "      <td>23.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>Wheat</td>\n",
              "      <td>10.40000</td>\n",
              "      <td>Wheat</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>189228</th>\n",
              "      <td>770.28486</td>\n",
              "      <td>27.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>Wheat</td>\n",
              "      <td>10.40000</td>\n",
              "      <td>Wheat</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>189229</th>\n",
              "      <td>770.00000</td>\n",
              "      <td>26.0</td>\n",
              "      <td>6.1</td>\n",
              "      <td>Wheat</td>\n",
              "      <td>10.40000</td>\n",
              "      <td>Wheat</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>189230</th>\n",
              "      <td>633.83459</td>\n",
              "      <td>22.0</td>\n",
              "      <td>6.2</td>\n",
              "      <td>Wheat</td>\n",
              "      <td>10.40000</td>\n",
              "      <td>Wheat</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>189231</th>\n",
              "      <td>761.20623</td>\n",
              "      <td>22.0</td>\n",
              "      <td>6.2</td>\n",
              "      <td>Wheat</td>\n",
              "      <td>10.40000</td>\n",
              "      <td>Wheat</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>189232 rows Ã— 11 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "         Rainfall  Temperature   Ph   Crop  Production Cropconversion State  \\\n",
              "0       400.15082         20.0  3.0  Bajra     0.00690          Bajra   NaN   \n",
              "1       400.16331         20.0  3.2  Bajra     0.00747          Bajra   NaN   \n",
              "2       400.16387         20.0  3.2  Bajra     0.00749          Bajra   NaN   \n",
              "3       400.17967         20.0  3.2  Bajra     0.00822          Bajra   NaN   \n",
              "4       400.19582         20.0  3.2  Bajra     0.00895          Bajra   NaN   \n",
              "...           ...          ...  ...    ...         ...            ...   ...   \n",
              "189227  766.92202         23.0  6.0  Wheat    10.40000          Wheat   NaN   \n",
              "189228  770.28486         27.0  6.0  Wheat    10.40000          Wheat   NaN   \n",
              "189229  770.00000         26.0  6.1  Wheat    10.40000          Wheat   NaN   \n",
              "189230  633.83459         22.0  6.2  Wheat    10.40000          Wheat   NaN   \n",
              "189231  761.20623         22.0  6.2  Wheat    10.40000          Wheat   NaN   \n",
              "\n",
              "        Cost of Cultivation (`/Hectare) A2+FL  \\\n",
              "0                                         NaN   \n",
              "1                                         NaN   \n",
              "2                                         NaN   \n",
              "3                                         NaN   \n",
              "4                                         NaN   \n",
              "...                                       ...   \n",
              "189227                                    NaN   \n",
              "189228                                    NaN   \n",
              "189229                                    NaN   \n",
              "189230                                    NaN   \n",
              "189231                                    NaN   \n",
              "\n",
              "        Cost of Cultivation (`/Hectare) C2  Cost of Production (`/Quintal) C2  \\\n",
              "0                                      NaN                                NaN   \n",
              "1                                      NaN                                NaN   \n",
              "2                                      NaN                                NaN   \n",
              "3                                      NaN                                NaN   \n",
              "4                                      NaN                                NaN   \n",
              "...                                    ...                                ...   \n",
              "189227                                 NaN                                NaN   \n",
              "189228                                 NaN                                NaN   \n",
              "189229                                 NaN                                NaN   \n",
              "189230                                 NaN                                NaN   \n",
              "189231                                 NaN                                NaN   \n",
              "\n",
              "        Yield (Quintal/ Hectare)   \n",
              "0                             NaN  \n",
              "1                             NaN  \n",
              "2                             NaN  \n",
              "3                             NaN  \n",
              "4                             NaN  \n",
              "...                           ...  \n",
              "189227                        NaN  \n",
              "189228                        NaN  \n",
              "189229                        NaN  \n",
              "189230                        NaN  \n",
              "189231                        NaN  \n",
              "\n",
              "[189232 rows x 11 columns]"
            ]
          },
          "execution_count": 22,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "df=pd.merge(df_cropvarious,df_statewise,on='Crop',how=\"left\")\n",
        "df"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "5bec551b",
      "metadata": {
        "id": "5bec551b"
      },
      "outputs": [],
      "source": []
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3 (ipykernel)",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.11.1"
    },
    "colab": {
      "provenance": [],
      "include_colab_link": true
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}